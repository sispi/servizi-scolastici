
package it.filippetti.ks.api.payment.pmpay.authpa;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


//Location = "file:/home/raffaele/Documenti/Filippetti/PagoPA/AuthPASoap.wsdl"

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "AuthPA", targetNamespace = "http://pmPay.it/ws/authPA/", wsdlLocation = "https://service.pmpay.it/authPA/services/AuthPASoap?wsdl")
public class AuthPA
    extends Service
{

    private final static URL AUTHPA_WSDL_LOCATION;
    private final static WebServiceException AUTHPA_EXCEPTION;
    private final static QName AUTHPA_QNAME = new QName("http://pmPay.it/ws/authPA/", "AuthPA");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://service.pmpay.it/authPA/services/AuthPASoap?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        AUTHPA_WSDL_LOCATION = url;
        AUTHPA_EXCEPTION = e;
    }

    public AuthPA() {
        super(__getWsdlLocation(), AUTHPA_QNAME);
    }

    public AuthPA(WebServiceFeature... features) {
        super(__getWsdlLocation(), AUTHPA_QNAME, features);
    }

    public AuthPA(URL wsdlLocation) {
        super(wsdlLocation, AUTHPA_QNAME);
    }

    public AuthPA(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AUTHPA_QNAME, features);
    }

    public AuthPA(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AuthPA(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns AuthPASoap
     */
    @WebEndpoint(name = "AuthPASoap")
    public AuthPASoap getAuthPASoap() {
        return super.getPort(new QName("http://pmPay.it/ws/authPA/", "AuthPASoap"), AuthPASoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthPASoap
     */
    @WebEndpoint(name = "AuthPASoap")
    public AuthPASoap getAuthPASoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://pmPay.it/ws/authPA/", "AuthPASoap"), AuthPASoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AUTHPA_EXCEPTION!= null) {
            throw AUTHPA_EXCEPTION;
        }
        return AUTHPA_WSDL_LOCATION;
    }

}
