kind: Deployment
metadata:
    name: ${deployment.id}
    labels:
        application: ${deployment.id}
    annotations:
        image.openshift.io/triggers: > 
            [
             {
               "from": {
                 "kind": "ImageStreamTag", 
                 "name": "@project.artifactId@:@project.version@" 
               },
               "fieldPath": "spec.template.spec.containers[?(@.name==\"application\")].image"
             }
            ]          
spec:
    serviceName: ${deployment.id}
    replicas: 1
    selector:
        matchLabels:
            application: ${deployment.id}
    template:
        metadata:
            name: ${deployment.id}
            labels:
                application: ${deployment.id}
        spec:
            serviceAccountName: ${deployment.id}
            containers:
                - name: application
                  image: @project.artifactId@:@project.version@
                  imagePullPolicy: IfNotPresent
                  ports:
                    - containerPort: 8080
                      name: http
                      protocol: TCP
                    - containerPort: 9779
                      name: prometheus
                      protocol: TCP
                    - containerPort: 8778
                      name: jolokia
                      protocol: TCP
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /actuator/health
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 10
                    successThreshold: 1
                  livenessProbe:
                    failureThreshold: 3
                    httpGet:
                        path: /actuator/health
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 180
                    successThreshold: 1
                  securityContext:
                    privileged: false
