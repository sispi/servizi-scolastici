{
"version": 3,
"sources": [
"app.js",
"lib.js",
"node.js"
],
"names": [],
"mappingstwhgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
"file": "ganttchart.js",
"sourcesContent": [
"//\n// ganttchart - app\n// @author Kazuhiko Arase\n// Licensed under MIT LICENSE\n//\n\n'use strict';\n\n!function(prLib) {\n\n  var DAY_IN_MILLIS = 1000 * 3600 * 24;\n\n  var createTask = function() {\n    return {\n      indent : 0,\n      wbsId : '',\n      taskId : 0,\n      taskName : '',\n      assignee : '',\n      origEst : '',\n      currEst : '',\n      elapsed : '',\n      remain : '',\n      startDate : '',\n      finishDate : '',\n      actStartDate : '',\n      actFinishDate : '',\n      linkType : '',\n      linkedTaskId : 0,\n      act : {}\n    };\n  };\n\n  var updateTasks = function(tableModel) {\n    var util = prLib.util;\n    var taskCount = tableModel.getTaskCount();\n    var wbsId = [];\n    for (var row = 0; row < taskCount; row += 1) {\n      var task = tableModel.getTaskAt(row);\n      task.grouped = row + 1 < taskCount &&\n        tableModel.getTaskAt(row + 1).indent > task.indent;\n      // set wbsId\n      while (wbsId.length <= task.indent) {\n        wbsId.push(0);\n      }\n      if (wbsId.length > task.indent + 1) {\n        wbsId = wbsId.slice(0, task.indent + 1);\n      }\n      wbsId[task.indent] += 1;\n      task.wbsId = wbsId.join('.');\n\n      if (!task.grouped) {\n        // calc elapsed and remain\n        var elapsed = 0;\n        var minActDate = '';\n        var maxActDate = '';\n        for (var actDate in task.act) {\n          if (!minActDate) {\n            minActDate = maxActDate = actDate;\n          } else {\n            minActDate = util.min(minActDate, actDate);\n            maxActDate = util.max(maxActDate, actDate);\n          }\n          elapsed += +task.act[actDate];\n        }\n        var est = task.currEst || task.origEst;\n        var remain = +est - elapsed;\n        task.elapsed = elapsed != 0? util.formatNumber(elapsed, 2) : '';\n        task.remain = est == ''? '' : util.formatNumber(remain, 2);\n\n        task.actStartDate = minActDate;\n        task.actFinishDate = maxActDate;\n\n        if (+task.remain != 0) {\n          // does not finish yet.\n          task.actFinishDate = '';\n        }\n      }\n    }\n  };\n\n  var createTaskExByRow = function(opts, groupItems, tableModel) {\n\n    var createTaskExAt = function(row) {\n\n      var task = tableModel.getTaskAt(row);\n      var taskEx = { act : {} };\n\n      if (!task.grouped) {\n\n        var simState = null;\n\n        // calc est\n        if (task.startDate) {\n          simState = {\n            date : util.strToDate(task.startDate),\n            hours : 0\n          };\n          for (var i = 0; i < 30; i += 1) {\n            simState.hours =\n              opts.getActHours(simState.date, task.assignee);\n            if (simState.hours > 0) {\n              break;\n            }\n            simState.date.setDate(simState.date.getDate() + 1);\n          }\n        }\n        if (lastSimState[task.assignee]) {\n          if (simState && +simState.date >\n            +lastSimState[task.assignee].date) {\n          } else {\n            simState = lastSimState[task.assignee];\n          }\n        }\n\n        if (simState) {\n          taskEx.simStartDate = util.parseDate(simState.date);\n          taskEx.simStartHours = simState.hours;\n        }\n\n        var est = task.currEst || task.origEst;\n        if (est && simState) {\n\n          var simEst = 0;\n          est = +est;\n\n          while (est > 0) {\n\n            if (est >= simState.hours) {\n              if  (simState.hours > 0) {\n                simEst += simState.hours;\n                est -= simState.hours;\n                simState.hours = 0;\n              } else {\n                simEst += opts.dayInHours;\n              }\n            } else {\n              simEst += est;\n              simState.hours -= est;\n              est = 0;\n            }\n\n            if (est > 0) {\n              simState.date.setDate(simState.date.getDate() + 1);\n              simState.hours +=\n                opts.getActHours(simState.date, task.assignee);\n            }\n          }\n\n          lastSimState[task.assignee] = simState;\n          taskEx.simFinishDate = util.parseDate(simState.date);\n          taskEx.simEndHours = simState.hours;\n          taskEx.simEst = simEst;\n        }\n      }\n\n      return taskEx;\n    };\n\n    var util = prLib.util;\n    var taskCount = tableModel.getTaskCount();\n    var lastSimState = {};\n\n    // phase1\n    var taskExByRow = function() {\n      taskExByRow = {};\n      for (var i = 0; i < taskCount; i += 1) {\n        taskExByRow[i] = createTaskExAt(i);\n      }\n      return taskExByRow;\n    }();\n\n    // phase2\n    for (var row = 0; row < taskCount; row += 1) {\n      var task = tableModel.getTaskAt(row);\n      var taskEx = taskExByRow[row];\n      if (task.grouped) {\n        var leafs = [];\n        for (var r = row + 1; r < taskCount; r += 1) {\n          var currTask = tableModel.getTaskAt(r);\n          if (currTask.indent <= task.indent) {\n            break;\n          }\n          if (r + 1 < taskCount &&\n              tableModel.getTaskAt(r + 1).indent > currTask.indent) {\n            // grouped\n          } else {\n            // leaf\n            leafs.push({ task : currTask, taskEx : taskExByRow[r] });\n          }\n        }\n        //taskEx.lastLeaf = leafs[leafs.length - 1];\n        for (var dataField in groupItems) {\n          if (dataField == 'assignee') {\n            taskEx.assignees = groupItems[dataField](leafs);\n          } else {\n            taskEx[dataField] = groupItems[dataField](leafs);\n          }\n        }\n\n        if (+taskEx.remain != 0) {\n          // does not finish yet.\n          taskEx.actFinishDate = '';\n        }\n\n        // calc group act.\n        var act = {};\n        for (var i = 0; i < leafs.length; i += 1) {\n          var leafAct = leafs[i].task.act;\n          for (var d in leafAct) {\n            if (act[d]) {\n              act[d] += +leafAct[d];\n            } else {\n              act[d] = +leafAct[d];\n            }\n          }\n        }\n        for (var d in act) {\n          taskEx.act[d] = util.formatNumber(act[d], 2);\n        }\n      }\n    }\n\n    return taskExByRow;\n  };\n\n  var createPrTable = function(opts) {\n\n    var util = prLib.util;\n    var i18n = prLib.i18n;\n    var createTable = prLib.createTable;\n    var createTableModel = prLib.createTableModel;\n    var defaultCellRendererFactory = prLib.defaultCellRendererFactory;\n\n    opts = util.extend({\n      maxIndent : 8,\n      dayInHours : 7.75,\n      isHoliday : function(date) {\n        return date.getDay() == 0 || date.getDay() == 6;\n      },\n      getActHours : function(date, assignee) {\n        return this.isHoliday(date)? 0 : this.dayInHours;\n      }\n    }, opts || {});\n\n    var dateSpecs = [\n      { colSpan : 7, cellInDays : 1, dateCellWidth : 40 },\n      { colSpan : 4, cellInDays : 7, dateCellWidth : 25 }\n    ];\n\n    var messages = getMessages();\n\n    var template = {\n      thead : [\n        [\n          { label: '', colSpan : 4 },\n          { label: messages.MAN_HOURS, colSpan : 4 },\n          { label: messages.ORIGINAL, colSpan : 2 },\n          { label: messages.ACTUAL, colSpan : 2 },\n          { label: messages.LINK, colSpan : 2 }\n        ],\n        [\n          { label: messages.WBS, dataField: 'wbsId', width: 50 },\n          { label: messages.TASK_ID, dataField: 'taskId', width: 50 },\n          { label: messages.TASK_NAME, dataField: 'taskName', editable: true },\n          { label: messages.ASSIGNEE, dataField: 'assignee',\n            dataType: 'select-one', editable: true, filterEnabled : true,\n            width : 50,\n            options : function() {\n              return table.model.getUserOptions().list;\n            },\n            allowAnonymousOption : true\n          },\n          { label: messages.ORIG_EST, dataField: 'origEst', width : 60,\n            dataType: 'number', decimalDigits: 2, editable: true },\n          { label: messages.CURR_EST, dataField: 'currEst', width : 60,\n            dataType: 'number', decimalDigits: 2, editable: true },\n          { label: messages.ELAPSED, dataField: 'elapsed', width : 60,\n            dataType: 'number', decimalDigits: 2 },\n          { label: messages.REMAIN, dataField: 'remain', width : 60,\n            dataType: 'number', decimalDigits: 2 },\n          { label: messages.START_DATE, dataField: 'startDate',\n            dataType: 'date', editable: true },\n          { label: messages.FINISH_DATE, dataField: 'finishDate',\n            dataType: 'date', editable: true },\n          { label: messages.START_DATE, dataField: 'actStartDate',\n            dataType: 'date', editable: false },\n          { label: messages.FINISH_DATE, dataField: 'actFinishDate',\n            dataType: 'date', editable: false },\n          { label: messages.LINK_TYPE, dataField: 'linkType', width: 40,\n            dataType: 'select-one', editable: true,\n            options : function() {\n              return [ '', 'FS', 'FF', 'SS', 'SF' ].map(function(type) {\n                return { value : type, label : type };\n              });\n            }\n          },\n          { label: messages.LINKED_TASK, dataField: 'linkedTaskId',\n            dataType: 'select-one', editable: true,\n            options : function() {\n              return table.model.getTaskOptions().list.map(function(opt) {\n                return {\n                  label : opt.value? opt.value + ':' + opt.label : opt.label,\n                  value : opt.value\n                };\n              });\n            },\n            labelFunction : function(value) {\n              var label = table.model.getTaskOptions().map[value];\n              return typeof label == 'string'?\n                  (value? value + ':' + label : label) : '?';\n            }\n          }/*,\n          { label:'Memo1', editable : true, dataField : 'memo1' },\n          { label:'Memo2', editable : true, dataField : 'memo2' },\n          { label:'Memo3', editable : true, dataField : 'memo3' },\n          { label:'Memo4', editable : true, dataField : 'memo4' }*/\n        ]\n      ]\n    };\n\n    var getStyleAt = function(){\n\n      var styles = function(){\n        var styles = {};\n        var row = 0;\n        template.thead.forEach(function(tr) {\n          var col = 0;\n          tr.forEach(function(cell) {\n            cell = util.extend(\n                { rowSpan : 1, colSpan : 1, label : '' }, cell);\n            var cellId = util.getCellId(row, col);\n            styles[cellId] = cell;\n            col += cell.colSpan;\n          });\n          row += 1;\n        });\n        return styles;\n      }();\n\n      return function(row, col) {\n        var cellId = util.getCellId(row, col);\n        return styles[cellId] || {};\n      };\n    }();\n\n    var groupItems = function() {\n\n      var sumFunc = function(prop) {\n        return function(leafs) {\n          var sum = 0;\n          var empty = true;\n          for (var i = 0; i < leafs.length; i += 1) {\n            if (empty && leafs[i].task[prop].length > 0) {\n              empty = false;\n            }\n            sum += +(leafs[i].task[prop] || '0');\n          }\n          return empty? '' : '' + sum;\n        };\n      };\n\n      var minDateFunc = function(task, prop) {\n        return function(leafs) {\n          var value = '';\n          for (var i = 0; i < leafs.length; i += 1) {\n            var date = leafs[i][task][prop];\n            if (date) {\n              if (value) {\n                value = util.min(value, date);\n              } else {\n                value = date;\n              }\n            }\n          }\n          return value;\n        };\n      };\n\n      var maxDateFunc = function(task, prop) {\n        return function(leafs) {\n          var value = '';\n          for (var i = 0; i < leafs.length; i += 1) {\n            var date = leafs[i][task][prop];\n            if (date) {\n              if (value) {\n                value = util.max(value, date);\n              } else {\n                value = date;\n              }\n            }\n          }\n          return value;\n        };\n      };\n\n      return {\n        startDate : minDateFunc('task', 'startDate'),\n        finishDate : maxDateFunc('task', 'finishDate'),\n        actStartDate : minDateFunc('task', 'actStartDate'),\n        actFinishDate : maxDateFunc('task', 'actFinishDate'),\n        simStartDate : minDateFunc('taskEx', 'simStartDate'),\n        simFinishDate : maxDateFunc('taskEx', 'simFinishDate'),\n        origEst : sumFunc('origEst'),\n        currEst : sumFunc('currEst'),\n        elapsed : sumFunc('elapsed'),\n        remain : sumFunc('remain'),\n        assignee : function(leafs) {\n          var exists = {};\n          var assignees = [];\n          for (var i = 0; i < leafs.length; i += 1) {\n            var assignee = leafs[i].task.assignee;\n            if (!assignee) {\n              continue;\n            }\n            if (!exists[assignee]) {\n              exists[assignee] = true;\n              assignees.push(assignee);\n            }\n          }\n          return assignees;\n        }\n      };\n    }();\n\n    var table = createTable(util.extend(createTableModel(), {\n\n      tasks : null,\n      selectedRows : [],\n\n      currentTableState : null,\n\n      taskExByRow : null,\n      viewRows : null,\n      rowByTaskId : null,\n      dateInfo : null,\n      userOptions : null,\n      taskOptions : null,\n\n      invalidateTasks : function() {\n        this.taskExByRow = null;\n        this.viewRows = null;\n        this.rowByTaskId = null;\n        this.dateInfo = null;\n        this.userOptions = null;\n        this.taskOptions = null;\n      },\n\n      getUserOptions : function() {\n        if (this.userOptions == null) {\n          var map = {};\n          var list = [ { label : '', value : '' } ];\n          this.tasks.forEach(function(task) {\n            if (task.assignee && !map[task.assignee]) {\n              map[task.assignee] = true;\n              list.push({ label : task.assignee, value : task.assignee });\n            }\n          });\n          list.sort(function(o1, o2) {\n            return o1.value < o2.value? -1 : 1;\n          });\n          this.userOptions = { map : map, list : list };\n        }\n        return this.userOptions;\n      },\n      getTaskOptions : function() {\n        if (this.taskOptions == null) {\n          var map = {};\n          var list = [ { taskId : 0, taskName : '' } ].\n            concat(this.tasks).\n            map(function(task) {\n              map[task.taskId] = task.taskName;\n              return { value : task.taskId, label : task.taskName };\n            });\n          this.taskOptions = { map : map, list : list };\n        }\n        return this.taskOptions;\n      },\n\n      getDateInfo : function() {\n        if (!this.dateInfo) {\n          this.dateInfo = this.createDateInfo();\n        }\n        return this.dateInfo;\n      },\n      createDateInfo : function() {\n\n        var viewRows = this.getViewRows();\n        var minDate = '';\n        var maxDate = '';\n\n        for (var i = 0; i < viewRows.length; i += 1) {\n          var taskEx = this.getTaskExAt(i);\n          if (taskEx.simStartDate) {\n            if (!minDate) {\n              minDate = maxDate = taskEx.simStartDate;\n            } else {\n              minDate = util.min(minDate, taskEx.simStartDate);\n              maxDate = util.max(maxDate, taskEx.simStartDate);\n            }\n          }\n          if (taskEx.simFinishDate) {\n            if (!minDate) {\n              minDate = maxDate = taskEx.simFinishDate;\n            } else {\n              minDate = util.min(minDate, taskEx.simFinishDate);\n              maxDate = util.max(maxDate, taskEx.simFinishDate);\n            }\n          }\n        }\n\n        var dateFrom = new Date();\n        var dateTo = new Date();\n        if (minDate) {\n          dateFrom = util.strToDate(minDate);\n          dateTo = util.strToDate(maxDate);\n        }\n\n        // fix to nearest monday.\n        dateFrom = new Date(\n            dateFrom.getFullYear(),\n            dateFrom.getMonth(),\n            dateFrom.getDate() - (dateFrom.getDay() + 6) % 7);\n\n        var dateSpec = this.getDateSpec();\n        var numColumns = Math.floor(\n            (dateTo.getTime() - dateFrom.getTime() ) / DAY_IN_MILLIS /\n            (dateSpec.colSpan * dateSpec.cellInDays) + 1) * dateSpec.colSpan;\n\n        return {\n          numColumns : numColumns,\n          getDate : function(offset) {\n            return new Date(dateFrom.getFullYear(),\n                dateFrom.getMonth(), dateFrom.getDate() + offset);\n          }\n        };\n      },\n      filters : {},\n      rejectedTasks : {},\n      getFilterFor : function(dataField) {\n        return this.filters[dataField] ||\n            (this.filters[dataField] = { rejects : {} });\n      },\n      acceptTask : function(task) {\n        return true;\n      },\n      getViewRows : function() {\n        if (this.viewRows == null) {\n          // update task properties.\n          updateTasks(this);\n          var viewRows = [];\n          var taskCount = this.getTaskCount();\n          for (var row = 0; row < taskCount; row += 1) {\n            var task = this.getTaskAt(row);\n            if (task.grouped || this.acceptTask(task) ) {\n              viewRows.push(row);\n            }\n          }\n          //this.getTaskExAt(0);\n          var taskExByRow = createTaskExByRow(opts, groupItems, {\n            getTaskCount : function() { return viewRows.length; },\n            getTaskAt : function(row) {\n              return this.getTaskAt(viewRows[row]);\n            }.bind(this)\n          });\n          this.viewRows = viewRows.filter(function(row, r) {\n            var task = this.getTaskAt(row);\n            return this.acceptTask(task.grouped? taskExByRow[r] : task);\n          }.bind(this) );\n        }\n        return this.viewRows;\n      },\n      getTaskExAt : function(row) {\n        if (!this.taskExByRow) {\n          var viewRows = this.getViewRows();\n          this.taskExByRow = createTaskExByRow(opts, groupItems, {\n            getTaskCount : function() { return viewRows.length; },\n            getTaskAt : function(row) {\n              return this.getTaskAt(viewRows[row]);\n            }.bind(this)\n          });\n        }\n        return this.taskExByRow[row];\n      },\n      getRowByTaskId : function(taskId) {\n        if (!this.rowByTaskId) {\n          var rowByTaskId = {};\n          var taskCount = this.getTaskCount();\n          for (var i = 0; i < taskCount; i += 1) {\n            rowByTaskId[this.getTaskAt(i).taskId] = i;\n          }\n          this.rowByTaskId = rowByTaskId;\n        }\n        return this.rowByTaskId[taskId];\n      },\n      getTaskCount : function() {\n        return this.tasks.length;\n      },\n      getTaskAt : function(row) {\n        return this.tasks[row];\n      },\n      getSelectedRows : function() {\n        return this.selectedRows;\n      },\n      setSelectedRows : function(selectedRows) {\n        this.selectedRows = selectedRows;\n      },\n      getNumColumns : function() {\n        return [ 1, template.thead[1].length, this.getDateInfo().numColumns ];\n      },\n      getNumRows : function() {\n        return [ template.thead.length, this.getViewRows().length, 1 ];\n      },\n      getContentWidth : function() {\n        return this.userSettings.contentWidth;\n      },\n      setContentWidth : function(contentWidth) {\n        this.userSettings.contentWidth = contentWidth;\n      },\n      setCellWidthAt : function(col, cellWidth) {\n        this.userSettings.cellWidths[col] =\n          Math.max(10, Math.min(cellWidth, 300) );\n      },\n      getCellWidthAt : function(col) {\n        var numColumns = this.getNumColumns();\n        if (col < numColumns[0]) {\n          return 20;\n        } else if (col < numColumns[0] + numColumns[1]) {\n          if (this.userSettings.cellWidths[col]) {\n            return this.userSettings.cellWidths[col];\n          }\n          var templateCell = getStyleAt(1, col - numColumns[0]);\n          return templateCell.width || 80;\n        } else {\n          return this.getDateSpec().dateCellWidth;\n        }\n      },\n\n      getCellHeightAt : function(row) {\n        return 20;\n      },\n\n      getCellAt : function(row, col, hint) {\n\n        var numColumns = this.getNumColumns();\n        var numRows = this.getNumRows();\n        var r, c;\n\n        var dateSpec = this.getDateSpec();\n        var dateInfo = this.getDateInfo();\n\n        var cell = { value : '', colSpan : 1, rowSpan : 1, className : '' };\n\n        if (row < numRows[0]) {\n          cell.className += ' ${prefix}-header';\n          if (col < numColumns[0]) {\n\n          } else if (col < numColumns[0] + numColumns[1]) {\n            util.extend(cell, getStyleAt(row, col - numColumns[0]) );\n            cell.factory = headerFactory;\n            cell.value = cell.label || '';\n            delete cell.editable;\n            delete cell.dataType;\n            delete cell.labelFunction;\n          } else {\n            c = col - (numColumns[0] + numColumns[1]);\n            var date = dateInfo.getDate(c * dateSpec.cellInDays);\n            if (opts.isHoliday(date) ) {\n              cell.className += ' ${prefix}-holiday';\n            }\n            if (row == 0) {\n              if (c % dateSpec.colSpan == 0) {\n                cell.value = date.getFullYear() +\n                  '/' + (date.getMonth() + 1) +\n                  '/' + date.getDate();\n                cell.colSpan = dateSpec.colSpan;\n              }\n            } else {\n              cell.className += ' ${prefix}-date';\n              cell.value = '' + date.getDate();\n            }\n          }\n\n        } else if (row < numRows[0] + numRows[1]) {\n\n          r = row - numRows[0];\n\n          if (hint == 'span') {\n            // skip\n          } else {\n            if (this.selectedRows.indexOf(r) != -1) {\n              cell.className += ' ${prefix}-selected';\n            }\n          }\n\n          if (col < numColumns[0]) {\n          } else if (col < numColumns[0] + numColumns[1]) {\n\n            if (hint == 'span') {\n              // skip\n            } else {\n\n              var task = this.getTaskAt(this.getViewRows()[r]);\n              var taskEx = this.getTaskExAt(r);\n\n              util.extend(cell, getStyleAt(1, col - numColumns[0]) );\n              if (cell.dataType == 'number') {\n                cell.className += ' ${prefix}-number';\n              }\n              if (cell.dataField == 'taskName') {\n                cell.className += ' ${prefix}-indent' + task.indent;\n              }\n\n              if (cell.dataField == 'wbsId' ||\n                  cell.dataField == 'taskId' ||\n                  cell.dataField == 'elapsed' ||\n                  cell.dataField == 'remain' ||\n                  cell.dataField == 'actStartDate' ||\n                  cell.dataField == 'actFinishDate') {\n                cell.className += ' ${prefix}-readonly';\n              }\n\n              cell.value = task[cell.dataField];\n\n              if (task.grouped && groupItems[cell.dataField]) {\n                cell.value = cell.dataField == 'assignee'?\n                    taskEx.assignees.join(',') : taskEx[cell.dataField];\n                cell.editable = false;\n                cell.className += ' ${prefix}-grouped';\n              }\n\n              if (!task.grouped && cell.dataField == 'remain') {\n                var remain = +cell.value;\n                if (remain == 0) {\n                  cell.className += ' ${prefix}-good';\n                } else if (remain < 0) {\n                  cell.className += ' ${prefix}-bad';\n                }\n              }\n            }\n\n          } else {\n\n            if (hint == 'span') {\n              // skip\n            } else {\n\n              cell.factory = graphFactory;\n\n              c = col - (numColumns[0] + numColumns[1]);\n              var date = dateInfo.getDate(c * dateSpec.cellInDays);\n              if (opts.isHoliday(date) ) {\n                cell.className += ' ${prefix}-holiday';\n              }\n\n              var task = this.getTaskAt(this.getViewRows()[r]);\n              var taskEx = this.getTaskExAt(r);\n\n              cell.dataType = 'number';\n              cell.decimalDigits = 2;\n              cell.className += ' ${prefix}-number';\n\n              if (task.grouped) {\n                cell.className += ' ${prefix}-grouped';\n                cell.value = (taskEx.act || {})[util.parseDate(date)] || '';\n              } else if (dateSpec.cellInDays == 1) {\n                cell.editable = true;\n                cell.value = (task.act || {})[util.parseDate(date)] || '';\n              } else {\n                cell.editable = false;\n                cell.value = '';\n              }\n\n              if (cell.value) {\n                cell.className += ' ${prefix}-act-label';\n              }\n\n              if (this.currentTableState) {\n                var minCol = Math.max(this.currentTableState.minCol,\n                    numColumns[0] + numColumns[1]);\n                if (col == minCol) {\n                  cell.graphParams = {\n                    baseDate : date,\n                    dayInPixel : dateSpec.dateCellWidth / dateSpec.cellInDays,\n                    task : task,\n                    taskEx : taskEx\n                  };\n                }\n              }\n\n            }\n          }\n\n        } else {\n          cell.className += ' ${prefix}-footer';\n        }\n\n        return cell;\n      },\n\n      dateSpecsIndex : 0,\n      setDateSpecIndex : function(dateSpecsIndex) {\n        this.dateSpecsIndex = dateSpecsIndex;\n        this.invalidateTasks();\n        table.invalidate();\n      },\n      getDateSpec : function() {\n        return dateSpecs[this.dateSpecsIndex];\n      },\n\n      getTrimedTasks : function() {\n        var keys = Object.keys(createTask() );\n        return this.tasks.map(function(task) {\n          var newTask = {};\n          keys.forEach(function(k) {\n            newTask[k] = task[k];\n          });\n          return newTask;\n        });\n      },\n      applyfilterHandler : function(event) {\n        var filtered = false;\n        for (var dataField in this.filters) {\n          var filter = this.filters[dataField];\n          if (Object.keys(filter.rejects).length > 0) {\n            filtered = true;\n          }\n        }\n        if (filtered) {\n          var filter = this.getFilterFor('assignee');\n          this.acceptTask = function(task) {\n            if (typeof task.assignees == 'object') {\n              return task.assignees.length > 0;\n            } else {\n              return !filter.rejects[task.assignee];\n            }\n          };\n        } else {\n          this.acceptTask = function(task) { return true; };\n        }\n\n        this.invalidateTasks();\n        table.invalidate();\n      },\n      valuechangeHandler : function(event, detail) {\n\n        var numColumns = this.getNumColumns();\n        var numRows = this.getNumRows();\n        var row = detail.row;\n        var col = detail.col;\n        var r, c;\n\n        var dateInfo = this.getDateInfo();\n\n        if (row < numRows[0]) {\n\n        } else if (row < numRows[0] + numRows[1]) {\n\n          r = row - numRows[0];\n\n          if (col < numColumns[0]) {\n\n          } else if (col < numColumns[0] + numColumns[1]) {\n\n            c = col - numColumns[0];\n            var templateCell = getStyleAt(1, c);\n            var dataField = templateCell.dataField;\n            this.getTaskAt(this.getViewRows()[r])[dataField] = detail.newValue;\n\n            this.invalidateTasks();\n            table.render();\n\n          } else {\n\n            c = col - (numColumns[0] + numColumns[1]);\n            var date = dateInfo.getDate(c);\n            var task = this.getTaskAt(this.getViewRows()[r]);\n            if (detail.newValue) {\n              task.act[util.parseDate(date)] = detail.newValue;\n            } else {\n              delete task.act[util.parseDate(date)];\n            }\n\n            this.invalidateTasks();\n            table.render();\n          }\n        }\n      }\n    } ) );\n\n    !function(tables) {\n      tables.forEach(function(table) {\n        if (table.tblRow != 1) {\n          return;\n        }\n        var hoverHandler = function(event) {\n          var td = util.closest(event.target, { tagName : 'TD' });\n          if (td) {\n            var tdIndex = util.indexOf(td);\n            var trIndex = util.indexOf(td.parentNode);\n            var row = table.tbody.children[trIndex].row;\n            tables.forEach(function(table) {\n              table.tbody.children.forEach(function(tr) {\n                var className = (event.type == 'mouseover' && row == tr.row)?\n                    ' ${prefix}-selected' : '';\n                if (tr.className != className) {\n                  tr.className = className;\n                  util.set(tr.$el, { attrs : { 'class' : tr.className } });\n                }\n              });\n            });\n          }\n        };\n        util.$(table.$el).\n          on('mouseover', hoverHandler).\n          on('mouseout', hoverHandler);\n      });\n    }(table.tables);\n\n    table.model.on('valuechange', table.model.valuechangeHandler).\n      on('applyfilter', table.model.applyfilterHandler);\n    \n    var action = function(label) {\n\n      var swapTask = function(row1, row2) {\n        var task = this[viewRows[row1]];\n        this[viewRows[row1]] = this[viewRows[row2]];\n        this[viewRows[row2]] = task;\n      };\n\n      var messages = i18n.getInstance().messages;\n\n      var viewRows = table.model.getViewRows();\n      var selectedRows = table.model.getSelectedRows().slice();\n      selectedRows.sort();\n\n      if (label == messages.INSERT_ROW) {\n\n        if (selectedRows.length == 1) {\n\n          var selectedViewRow = viewRows[selectedRows[0]];\n\n          var newTasks = [];\n          var maxTaskId = 0;\n          table.model.tasks.forEach(function(task, i) {\n            newTasks.push(task);\n            maxTaskId = Math.max(maxTaskId, task.taskId);\n            if (i == selectedViewRow) {\n              newTasks.push(createTask() );\n            }\n          });\n          maxTaskId += 1;\n\n          var newIndex = selectedViewRow + 1;\n          newTasks[newIndex].indent = newTasks[selectedViewRow].indent;\n          newTasks[newIndex].taskId = maxTaskId;\n          newTasks[newIndex].taskName = 'Task#' + maxTaskId;\n\n          table.model.tasks = newTasks;\n          table.model.invalidateTasks();\n          table.invalidate();\n        }\n\n      } else if (label == messages.DELETE_ROW) {\n\n        var rows = {};\n        selectedRows.forEach(function(row) { rows[viewRows[row]] = true; });\n\n        var newTasks = [];\n        table.model.tasks.forEach(function(task, i) {\n          if (!rows[i]) {\n            newTasks.push(task);\n          }\n        });\n\n        table.model.setSelectedRows([]);\n        table.model.tasks = newTasks;\n        table.model.invalidateTasks();\n        table.invalidate();\n\n      } else if (label == messages.MOVE_UP) {\n\n        var newTasks = table.model.tasks.slice();\n        var rows = [ -1 ].concat(selectedRows);\n\n        for (var i = 1; i < rows.length; i += 1) {\n          if (rows[i] - 1 > rows[i - 1]) {\n            swapTask.call(newTasks, rows[i], rows[i] - 1);\n            rows[i] -= 1;\n          }\n        }\n\n        table.model.setSelectedRows(rows.slice(1) );\n        table.model.tasks = newTasks;\n        table.model.invalidateTasks();\n        table.invalidate();\n\n      } else if (label == messages.MOVE_DOWN) {\n\n        var newTasks = table.model.tasks.slice();\n        var rows = selectedRows.concat([ newTasks.length ]).reverse();\n\n        for (var i = 1; i < rows.length; i += 1) {\n          if (rows[i] + 1 < rows[i - 1]) {\n            swapTask.call(newTasks, rows[i], rows[i] + 1);\n            rows[i] += 1;\n          }\n        }\n\n        table.model.setSelectedRows(rows.slice(1) );\n        table.model.tasks = newTasks;\n        table.model.invalidateTasks();\n        table.invalidate();\n\n      } else if (label == messages.INDENT_UP ||\n          label == messages.INDENT_DOWN) {\n\n        selectedRows.forEach(function(row) {\n          var task = table.model.getTaskAt(viewRows[row]);\n          var indent = task.indent;\n          var maxIndent = row > 0?\n              table.model.getTaskAt(row - 1).indent + 1 : 0;\n          maxIndent = Math.min(maxIndent, opts.maxIndent);\n          indent += (label == messages.INDENT_UP)? -1 : 1;\n          indent = Math.max(0, Math.min(indent, maxIndent) );\n          task.indent = indent;\n        });\n\n        table.model.invalidateTasks();\n        table.invalidate();\n      }\n    };\n\n    util.$(table.$el).on('contextmenu', function(event) {\n      event.preventDefault();\n    });\n\n    table.on('mousedown', function(event, detail) {\n\n      if (detail.originalEvent.which != 3) {\n        return;\n      }\n\n      var mouseupHandler = function(event) {\n        if (util.closest(event.target, { $el : contextmenu }) ) {\n          return;\n        }\n        dispose();\n        util.$(document).off('mouseup', mouseupHandler);\n      };\n      util.$(document).on('mouseup', mouseupHandler);\n\n      var dispose = function() {\n        if (contextmenu) {\n          document.body.removeChild(contextmenu);\n          contextmenu = null;\n        }\n      };\n\n      var messages = i18n.getInstance().messages;\n\n      var cs = window.getComputedStyle(detail.originalEvent.target, null);\n      var contextmenu = util.createElement('div', {\n        attrs : { 'class' : '${prefix}-contextmenu' },\n        style : {\n          position : 'absolute',\n          left : detail.originalEvent.pageX + 'px',\n          top : detail.originalEvent.pageY + 'px',\n          fontFamily : cs.fontFamily,\n          fontSize : cs.fontSize\n        },\n        on : {\n          contextmenu : function(event) {\n            event.preventDefault();\n          }\n        } }, [\n          messages.INSERT_ROW,\n          messages.DELETE_ROW,\n          messages.MOVE_UP,\n          messages.MOVE_DOWN,\n          messages.INDENT_UP,\n          messages.INDENT_DOWN\n        ].map(function(label) {\n          return util.createElement('div', {\n            attrs : { 'class' : '${prefix}-menuitem' },\n            props : { textContent : label},\n            on : { click : function() {\n              dispose();\n              action(label);\n            } }\n          });\n        }) );\n      document.body.appendChild(contextmenu);\n    });\n\n    var calcEstInfo = function(baseDate, dayInPixel, task, taskEx) {\n\n      var est = 0;\n      if (task.grouped) {\n        if (taskEx.simFinishDate) {\n          var startTime = util.strToDate(taskEx.simStartDate).getTime();\n          var finishTime = util.strToDate(taskEx.simFinishDate).getTime();\n          est = ( (finishTime - startTime) /\n              DAY_IN_MILLIS + 1) * opts.dayInHours;\n        }\n      } else {\n        est = taskEx.simEst;\n      }\n\n      if (!est) {\n        return null;\n      }\n\n      var hourOffset = 0;\n      if (!task.grouped) {\n        hourOffset = (opts.dayInHours - (taskEx.simStartHours || 0) ) /\n          opts.dayInHours * dayInPixel;\n      }\n\n      var date = util.strToDate(taskEx.simStartDate);\n      var left = Math.floor( (date.getTime() - baseDate.getTime() ) /\n          DAY_IN_MILLIS * dayInPixel + hourOffset);\n\n      var estWidth = Math.floor(est / opts.dayInHours * dayInPixel) - 1;\n\n      var actWidth = 0;\n      var currEst;\n\n      if (task.grouped) {\n        currEst = +(taskEx.currEst || taskEx.origEst || '0');\n        if (currEst != 0) {\n          actWidth = Math.floor(estWidth * +taskEx.elapsed / currEst);\n        }\n      } else {\n        currEst = +(task.currEst || task.origEst || '0');\n        if (currEst != 0) {\n          actWidth = Math.floor(estWidth * +task.elapsed / currEst);\n        }\n      }\n      return { left : left, estWidth : estWidth, actWidth : actWidth,\n        assignee : task.grouped? taskEx.assignees.join(',') : task.assignee };\n    };\n\n    var createGraphCell = function(td) {\n\n      var estBar = util.createSVGElement('rect',\n          { attrs : { 'class' : '${prefix}-est-bar' } });\n      var actBar = util.createSVGElement('rect',\n          { attrs : { 'class' : '${prefix}-act-bar' } });\n      var label = util.createSVGElement('text',\n          { attrs : { 'class' : '${prefix}-graph-label' } });\n      var pathS = util.createSVGElement('path',\n          { attrs : { 'class' : '${prefix}-graph-path-s' } });\n      var pathF = util.createSVGElement('path',\n          { attrs : { 'class' : '${prefix}-graph-path-f' } });\n\n      var style = {};\n\n      var cs = window.getComputedStyle(td.$el);\n\n      return {\n        $el : util.createSVGElement('g',\n          { style : { fontFamily : cs.fontFamily, fontSize : cs.fontSize } },\n          [ estBar, actBar, label, pathS, pathF ]),\n        _setStyle : function(k, v) {\n          if (style[k] !== v) {\n            this.$el.style[k] = style[k] = v;\n          }\n          return this;\n        },\n        setVisible : function(visible) {\n          this._setStyle('display', visible? '' : 'none');\n        },\n        className : '',\n        estInfo : {},\n        setInfo : function(estInfo) {\n\n          var changed = this.estInfo.left != estInfo.left ||\n            this.estInfo.estWidth != estInfo.estWidth ||\n            this.estInfo.actWidth != estInfo.actWidth ||\n            this.estInfo.assignee != estInfo.assignee ||\n            this.estInfo.pathS != estInfo.pathS ||\n            this.estInfo.pathF != estInfo.pathF;\n\n          if (changed) {\n\n            util.set(pathS, { attrs : { d : estInfo.pathS } });\n            util.set(pathF, { attrs : { d : estInfo.pathF } });\n            util.set(estBar, { attrs : {\n              x : estInfo.left, y : 4,\n              width : Math.max(0, estInfo.estWidth), height : 11 } });\n            util.set(actBar, { attrs : {\n              x : estInfo.left, y : 7,\n              width : Math.max(0, estInfo.actWidth), height : 5 } });\n            util.set(label, { attrs : {\n              x : estInfo.left + estInfo.estWidth + 2, y : 14 } });\n\n            if (this.estInfo.assignee != estInfo.assignee) {\n              label.textContent = estInfo.assignee;\n            }\n\n            this.estInfo = estInfo;\n          }\n        }\n      };\n    };\n\n    var pathBuilder = function() {\n      var path = '';\n      return {\n        moveTo : function(x, y) { path += 'M' + x + ' ' + y; return this; },\n        lineTo : function(x, y) { path += 'L' + x + ' ' + y; return this; },\n        close : function() { path += 'Z'; return this; },\n        build : function() { return path; }\n      };\n    };\n\n    var buildLinkPaths = function(td,\n        linkedTaskRow, linkType, estInfo, linkedEstInfo) {\n\n      var tableModel = td.tableModel;\n\n      var numRows = tableModel.getNumRows();\n      var linkedRow = linkedTaskRow + numRows[0];\n\n      var pathY = 10;\n      var pwGap = 8;\n      var crossH = 7;\n      var arrowW = 4;\n      var arrowH = 3;\n\n      var h = 0;\n      var minRow = Math.min(td.row, linkedRow);\n      var maxRow = Math.max(td.row, linkedRow);\n      for (var i = minRow; i < maxRow; i += 1) {\n        h += tableModel.getCellHeightAt(i + numRows[0]);\n      }\n\n      if (linkedRow < td.row) {\n        h = -h;\n        crossH = -crossH - 1;\n      }\n\n      var estRight = estInfo.left + estInfo.estWidth;\n      var linkedEstRight = linkedEstInfo.left + linkedEstInfo.estWidth;\n\n      // stroke\n      var pbS = pathBuilder();\n\n      // start\n      if (linkType == 'SS' || linkType == 'FS') {\n        pbS.moveTo(estInfo.left - arrowW, pathY);\n      } else {\n        pbS.moveTo(estRight + arrowW, pathY);\n      }\n\n      if (linkType == 'SS') {\n        var minX = Math.min(estInfo.left, linkedEstInfo.left);\n        pbS.lineTo(minX - pwGap, pathY);\n        pbS.lineTo(minX - pwGap, pathY + h);\n      } else if (linkType == 'FF') {\n        var maxX =  Math.max(estRight, linkedEstRight);\n        pbS.lineTo(maxX + pwGap, pathY);\n        pbS.lineTo(maxX + pwGap, pathY + h);\n      } else if (linkType == 'FS') {\n        pbS.lineTo(estInfo.left - pwGap, pathY);\n        if (linkedEstRight <= estInfo.left - pwGap) {\n          pbS.lineTo(estInfo.left - pwGap, pathY + h);\n        } else {\n          pbS.lineTo(estInfo.left - pwGap, pathY + crossH);\n          pbS.lineTo(linkedEstRight + pwGap, pathY + crossH);\n          pbS.lineTo(linkedEstRight + pwGap, pathY + h);\n        }\n      } else if (linkType == 'SF') {\n        pbS.lineTo(estRight + pwGap, pathY);\n        if (estRight + pwGap <= linkedEstInfo.left) {\n          pbS.lineTo(estRight + pwGap, pathY + h);\n        } else {\n          pbS.lineTo(estRight + pwGap, pathY + crossH);\n          pbS.lineTo(linkedEstInfo.left - pwGap, pathY + crossH);\n          pbS.lineTo(linkedEstInfo.left - pwGap, pathY + h);\n        }\n      }\n\n      // end\n      if (linkType == 'SF' || linkType == 'SS') {\n        pbS.lineTo(linkedEstInfo.left, pathY + h);\n      } else {\n        pbS.lineTo(linkedEstRight, pathY + h);\n      }\n\n      // fill\n      var pbF = pathBuilder();\n\n      if (linkType == 'SS' || linkType == 'FS') {\n        pbF.moveTo(estInfo.left - arrowW, pathY - arrowH);\n        pbF.lineTo(estInfo.left, pathY);\n        pbF.lineTo(estInfo.left - arrowW, pathY + arrowH);\n        pbF.close();\n      } else {\n        pbF.moveTo(estRight + arrowW, pathY - arrowH);\n        pbF.lineTo(estRight, pathY);\n        pbF.lineTo(estRight + arrowW, pathY + arrowH);\n        pbF.close();\n      }\n\n      return {\n        pathS : pbS.build(),\n        pathF : pbF.build(),\n      }\n    };\n\n    var createFilterButton = function() {\n      var size = 15;\n      return util.createSVGElement('svg',\n          { attrs : { class : '${prefix}-filter-button',\n              width : size, height : size },\n            style : { position : 'absolute', right : '2px', top : '2px' } },\n          [\n            util.createSVGElement('rect',\n              { attrs : { width : size, height : size, rx:2, ry : 2 } }),\n            util.createSVGElement('path',\n              { attrs : { d : 'M2 4L7.5 12L13 4Z' } })\n          ]);\n    };\n\n    var createCheckbox = function() {\n      var size = 15;\n      var r = 4;\n      var path = util.createSVGElement('path',\n          { attrs : { d : 'M3 6L7 11L12 4' } });\n      var rect = util.createSVGElement('rect',\n          { attrs : { 'class' : '${prefix}-all', x : r, y : r,\n            width : size - r * 2, height : size - r * 2 } });\n      return {\n        $el : util.createSVGElement('svg',\n          { attrs : { class : '${prefix}-checkbox',\n              width : size, height : size },\n            style : {  } },\n          [\n            util.createSVGElement('rect',\n              { attrs : { x : 1.5, y : 1.5,\n                width : size - 3, height : size - 3 } }),\n            path,\n            rect\n          ]),\n        state : 0,\n        setState : function(state) {\n          switch(state) {\n          case 0 :\n            path.style.display = 'none';\n            rect.style.display = 'none';\n            break;\n          case 1 :\n            path.style.display = '';\n            rect.style.display = 'none';\n            break;\n          case 2 :\n            path.style.display = 'none';\n            rect.style.display = '';\n            break;\n          default :\n            throw 'state:' + state;\n          }\n          this.state = state;\n        },\n        getState : function() {\n          return this.state;\n        }\n      };\n    };\n\n    var createFilterItem = function(label, action) {\n      var checkbox = createCheckbox();\n      return {\n        $el : util.createElement('div', {\n          attrs : { 'class' : '${prefix}-filter-item' },\n          on : { mousedown : function(event) {\n            event.preventDefault();\n          }, click : action } },\n          [ checkbox.$el,\n            util.createElement('span', {\n              attrs : { 'class' : '${prefix}-checkbox-label' },\n              props : { textContent : label } } ) ]),\n        setState : function(state) {\n          checkbox.setState(state);\n        },\n        getState : function() {\n          return checkbox.getState();\n        }\n      };\n    };\n\n    var createButton = function(label, action) {\n      return util.createElement('span', {\n        attrs : { 'class' : '${prefix}-button' },\n        props : {textContent : label},\n        on : { mousedown : function(event) {\n          event.preventDefault();\n        }, click : action } });\n    };\n\n    var headerFactory = function(td) {\n\n      var defaultRenderer = defaultCellRendererFactory(td);\n      var tableModel = td.tableModel;\n      var filterButton = null;\n      var currentCell = null;\n\n      var filterButton_clickHandler = function(event) {\n\n        var vals = function() {\n          var valMap = {};\n          var taskCount = tableModel.getTaskCount();\n          for (var i = 0; i < taskCount; i += 1) {\n            var task = tableModel.getTaskAt(i);\n            var value = task[currentCell.dataField];\n            if (typeof value == 'string') {\n              if (!valMap[value]) {\n                valMap[value] = true;\n              }\n            }\n          }\n          var vals = Object.keys(valMap);\n          vals.sort();\n          return [messages.ALL].concat(vals);\n        }();\n\n        var dispose = function() {\n          if (filterUI) {\n            document.body.removeChild(filterUI);\n            util.$(document).off('mousedown', document_mousedownHandler);\n            filterUI = null;\n          }\n        }\n        var document_mousedownHandler = function(event) {\n          if (util.closest(event.target, { $el : filterUI }) ) {\n            return;\n          }\n          dispose();\n        };\n\n        var off = util.offset(td.$el)\n\n        var filter = tableModel.getFilterFor(currentCell.dataField);\n\n        var filterItems = vals.map(function(val, i) {\n          var filterItem = createFilterItem(\n              val === ''? messages.BLANK : val, function() {\n            if (i == 0) {\n              var state = filterItem.getState() == 1? 0 : 1;\n              filterItems.forEach(function(filterItem, i) {\n                if (i > 0) {\n                  filterItem.setState(state);\n                }\n              });\n              filterItem.setState(state);\n            } else if (i > 0) {\n              filterItem.setState(filterItem.getState() == 1? 0 : 1);\n              updateAllCheck();\n            }\n          });\n          if (i > 0) {\n            filterItem.setState(filter.rejects[val]? 0 : 1);\n          }\n          return filterItem;\n        });\n\n        var updateAllCheck = function() {\n          var checkCount = 0;\n          filterItems.forEach(function(filterItem, i) {\n            if (i > 0) {\n              if (filterItem.getState() == 1) {\n                checkCount += 1;\n              }\n            }\n          });\n          filterItems[0].setState(checkCount == 0? 0 :\n            checkCount == filterItems.length - 1? 1 : 2);\n        };\n\n        var applyFilter = function() {\n          var rejects = {};\n          filterItems.forEach(function(filterItem, i) {\n            if (i > 0) {\n              if (filterItem.getState() == 0) {\n                rejects[vals[i]] = true;\n              }\n            }\n          });\n          filter.rejects = rejects;\n          table.model.trigger('applyfilter');\n        };\n\n        updateAllCheck();\n\n        var filterUI = util.createElement('div', {\n          attrs : { 'class' : '${prefix}-filter-ui' }, \n          style : { position : 'absolute',\n            left : (off.left - 1) + 'px',\n            top : (off.top - 1 + td.$el.offsetHeight) + 'px' }\n        }, [\n          util.createElement('div',\n            filterItems.map(function(item) { return item.$el; }) ),\n          util.createElement('div', [\n            createButton(messages.APPLY, function() {\n              applyFilter();\n              dispose();\n            }),\n            createButton(messages.CANCEL, function() {\n              dispose();\n            })\n          ])\n        ]);\n\n        document.body.appendChild(filterUI);\n        util.$(document).on('mousedown', document_mousedownHandler);\n      };\n\n      return {\n        render : function(cell) {\n          currentCell = cell;\n          if (filterButton == null && cell.filterEnabled) {\n            filterButton = createFilterButton();\n            util.$(filterButton).on('click', filterButton_clickHandler);\n            td.$el.appendChild(filterButton);\n          }\n          defaultRenderer.render(cell);\n        },\n        beginEdit : function(cell) {\n          return defaultRenderer.beginEdit(cell);\n        },\n        dispose : function() {\n          defaultRenderer.dispose();\n        }\n      }\n    };\n\n    var graphFactory = function(td) {\n\n      var renderGraph = function(cell) {\n\n        var graphParams = cell.graphParams;\n        if (graphCell == null) {\n          graphCell = createGraphCell(td);\n          tableBg.appendChild(graphCell.$el);\n        }\n\n        var task = graphParams.task;\n        var taskEx = graphParams.taskEx;\n\n        var estInfo = calcEstInfo(\n            graphParams.baseDate, graphParams.dayInPixel,\n            task, taskEx);\n\n        if (estInfo) {\n\n          var className = '${prefix}-graph';\n          className += ' ${prefix}-indent' + task.indent;\n          if (task.grouped) {\n            className += ' ${prefix}-grouped';\n          }\n          if (graphCell.className != className) {\n            graphCell.className = className;\n            util.set(graphCell.$el,\n                { attrs : { 'class' : graphCell.className } });\n          }\n\n          estInfo.path = '';\n\n          if (task.linkedTaskId && task.linkType) {\n            var linkedTaskRow, linkedViewRow;\n            linkedTaskRow = tableModel.getRowByTaskId(task.linkedTaskId);\n            if (typeof linkedTaskRow == 'number') {\n              linkedViewRow = tableModel.getViewRows()[linkedTaskRow];\n            }\n            if (typeof linkedViewRow == 'number') {\n              var linkedTask = tableModel.getTaskAt(linkedViewRow);\n              var linkedTaskEx = tableModel.getTaskExAt(linkedTaskRow);\n              var linkedEstInfo = calcEstInfo(\n                  graphParams.baseDate, graphParams.dayInPixel,\n                  linkedTask, linkedTaskEx);\n              if (linkedEstInfo) {\n                var paths = buildLinkPaths(td, linkedTaskRow, task.linkType,\n                    estInfo, linkedEstInfo);\n                estInfo.pathS = paths.pathS;\n                estInfo.pathF = paths.pathF;\n              }\n            }\n          }\n\n          graphCell.setInfo(estInfo);\n\n          layoutGraphCell();\n        }\n\n        graphCell.setVisible(!!estInfo);\n      };\n\n      var layoutGraphCell = function() {\n        var tableState = tableModel.currentTableState;\n        var left = tableState.tableLeft;\n        var top = tableState.tableTop;\n        for (var col = tableState.minCol; col < td.col; col += 1) {\n          left += tableModel.getCellWidthAt(col);\n        }\n        for (var row = tableState.minRow; row < td.row; row += 1) {\n          top += tableModel.getCellHeightAt(row);\n        }\n        util.set(graphCell.$el, { attrs : {\n          transform : 'translate(' + left + ' ' + top + ')' } });\n      };\n\n      var table = td.$el. // td\n        parentNode. // tr\n        parentNode. // tbody\n        parentNode; // table\n      var tableBg = table.parentNode.firstChild;\n      var graphCell = null;\n\n      var tableModel = td.tableModel;\n\n      var defaultRenderer = defaultCellRendererFactory(td);\n\n      return {\n        render : function(cell) {\n          defaultRenderer.render(cell);\n          if (cell.graphParams) {\n            renderGraph(cell);\n          } else {\n            if (graphCell) {\n              graphCell.setVisible(false);\n            }\n          }\n        },\n        beginEdit : function(cell) {\n          return defaultRenderer.beginEdit(cell);\n        },\n        dispose : function() {\n          defaultRenderer.dispose();\n          if (graphCell) {\n            tableBg.removeChild(graphCell.$el);\n            graphCell = null;\n          }\n        }\n      }\n    };\n\n    table.model.on('contentwidthchange', function(event, detail) {\n\n      this.setContentWidth(this.getContentWidth() + detail.deltaX);\n      table.invalidate();\n\n    }).on('cellwidthchange', function(event, detail) {\n\n      this.setCellWidthAt(detail.col,\n          this.getCellWidthAt(detail.col) + detail.deltaX);\n      table.invalidate();\n\n    });\n\n    table.on('click', function(event, detail) {\n\n      if (detail.originalEvent.which != 1) {\n        return;\n      }\n\n      var numColumns = this.model.getNumColumns();\n      var numRows = this.model.getNumRows();\n      var row = detail.row;\n      var col = detail.col;\n      if (col < numColumns[0]) {\n        if (row < numRows[0]) {\n          \n        } else if (row < numRows[0] + numRows[1]) {\n\n          detail.originalEvent.preventDefault();\n\n          var r = row - numRows[0];\n\n          if (detail.originalEvent.ctrlKey) {\n            if (this.model.getSelectedRows().indexOf(r) != -1) {\n              this.model.setSelectedRows(this.model.getSelectedRows().\n                  filter(function(row) { return row != r; }) );\n            } else {\n              this.model.setSelectedRows(\n                  this.model.getSelectedRows().concat([r]) );\n            }\n          } else if (detail.originalEvent.shiftKey) {\n            var selectedRows = this.model.getSelectedRows();\n            if (selectedRows.length > 0) {\n              var lastRow = selectedRows[selectedRows.length - 1];\n              var min = Math.min(lastRow, r);\n              var max = Math.max(lastRow, r);\n              selectedRows = [];\n              for (var rr = min; rr <= max; rr += 1) {\n                selectedRows.push(rr);\n              }\n              this.model.setSelectedRows(selectedRows);\n            } else {\n              this.model.setSelectedRows([r]);\n            }\n          } else {\n            this.model.setSelectedRows([r]);\n          }\n\n          this.invalidate();\n\n        } else {\n          \n        }\n        \n      }\n    }).on('hidegrid', function(event,detail) {\n      var hidegrid = detail;\n      table.tables.forEach(function(table) {\n        if (table.tblRow == 1 && table.tblCol == 2) {\n          table.setTableVisible(!hidegrid);\n        }\n      });\n    });\n\n    return table;\n  };\n\n  var getMessages = function() {\n\n    var util = prLib.util;\n    var i18n = prLib.i18n;\n\n    util.extend(i18n.en.messages, {\n      MAN_HOURS : 'Man Hours',\n      ORIGINAL : 'Original',\n      ACTUAL : 'Actual',\n      WBS : 'WBS',\n      TASK_ID : 'Task ID',\n      TASK_NAME : 'Task Name',\n      ASSIGNEE : 'Assignee',\n      ORIG_EST : 'Orig Est',\n      CURR_EST : 'Curr Est',\n      ELAPSED : 'Elapsed',\n      REMAIN : 'Remain',\n      START_DATE : 'Start',\n      FINISH_DATE : 'Finish',\n      LINK : 'Link',\n      LINK_TYPE : 'Type',\n      LINKED_TASK : 'Task',\n\n      INSERT_ROW : 'Insert Row',\n      DELETE_ROW : 'Delete Row',\n      MOVE_UP : 'Move Up',\n      MOVE_DOWN : 'Move Down',\n      INDENT_UP : 'Indent Up <',\n      INDENT_DOWN : 'Indent Down >',\n\n      ALL : 'All',\n      BLANK : '(Blank)',\n      APPLY : 'Apply',\n      CANCEL : 'Cancel'\n    });\n\n    util.extend(i18n.ja.messages, {\n      MAN_HOURS : '工数(h)',\n      ORIGINAL : '予定',\n      ACTUAL : '実績',\n      WBS : 'WBS番号',\n      TASK_ID : 'タスクID',\n      TASK_NAME : 'タスク名',\n      ASSIGNEE : '担当',\n      ORIG_EST : '当初見積',\n      CURR_EST : '現在見積',\n      ELAPSED : '実績工数',\n      REMAIN : '残工数',\n      START_DATE : '開始日',\n      FINISH_DATE : '完了日',\n      LINK : 'リンク',\n      LINK_TYPE : '種別',\n      LINKED_TASK : 'タスク',\n\n      INSERT_ROW : '行挿入',\n      DELETE_ROW : '行削除',\n      MOVE_UP : '上へ移動',\n      MOVE_DOWN : '下へ移動',\n      INDENT_UP : '一段上げる ←',\n      INDENT_DOWN : '一段下げる →',\n\n      ALL : '全て',\n      BLANK : '(空白)',\n      APPLY : '適用',\n      CANCEL : 'キャンセル'\n    });\n\n    return i18n.getInstance().messages;\n  };\n\n  prLib.createPrTable = createPrTable;\n\n}(window.prLib || (window.prLib = {}) );\n",
"//\n// ganttchart - lib\n// @author Kazuhiko Arase\n// Licensed under MIT LICENSE\n//\n\n'use strict';\n\n!function(prlib) {\n\n  var classNamePrefix = 'pr';\n\n  var util = function() {\n\n    var parseArguments = function(args) {\n      var children = [];\n      var opts = {};\n      for (var i = 1; i < args.length; i += 1) {\n        var a = args[i];\n        if (typeof a == 'object') {\n          if (typeof a.splice == 'function') {\n            children = a;\n          } else {\n            opts = a;\n          }\n        }\n      }\n      return { children : children, opts : opts };\n    }\n\n    var classNamePrefixRe = /\\$\\{prefix\\}/g;\n    var replaceClassNamePrefix = function(className) {\n      return className.replace(classNamePrefixRe, classNamePrefix);\n    };\n\n    var wideNumChars = '０１２３４５６７８９＋－．，／';\n    var narrowNumChars = '0123456789+-.,/';\n    if (wideNumChars.length != narrowNumChars.length) {\n      throw wideNumChars + ',' + narrowNumChars;\n    }\n\n    var $ = function(elm) {\n      this.elm = elm;\n    };\n    $.prototype = {\n      on : function(type, listener) {\n        this.elm.addEventListener(type, listener);\n        return this;\n      },\n      off : function(type, listener) {\n        this.elm.removeEventListener(type, listener);\n        return this;\n      },\n      addClass : function(className, remove) {\n        className = replaceClassNamePrefix(className);\n        var classes = '';\n        (this.elm.getAttribute('class') || '').split(/\\s+/g).\n          forEach(function(c) {\n            if (c != className) {\n              classes += ' ' + c;\n              return;\n            }\n          } );\n        if (!remove) {\n          classes += ' ' + className;\n        }\n        elm.setAttribute('class', classes);\n        return this;\n      },\n      removeClass : function(className) {\n        return this.addClass(className, true);\n      }\n    };\n\n    return {\n\n        extend : function() {\n          var o = arguments[0];\n          for (var i = 1; i < arguments.length; i += 1) {\n            var a = arguments[i];\n            for (var k in a) {\n              o[k] = a[k];\n            }\n          }\n          return o;\n        },\n\n        callLater : function(cb) {\n          window.setTimeout(cb, 0);\n        },\n\n        set : function(elm, opts) {\n          if (opts.attrs) {\n            for (var k in opts.attrs) {\n              var v = opts.attrs[k];\n              var t = typeof v;\n              if (t == 'number' || t == 'boolean') {\n                v = '' + v;\n              } else if (t == 'undefined') {\n                v = '';\n              }\n              if (typeof v != 'string') {\n                throw 'bad attr type for ' + k + ':' + (typeof v);\n              }\n              if (k == 'class') {\n                v = replaceClassNamePrefix(v);\n              }\n              elm.setAttribute(k, v);\n            }\n          }\n          if (opts.props) {\n            for (var k in opts.props) {\n              elm[k] = opts.props[k];\n            }\n          }\n          if (opts.style) {\n            for (var k in opts.style) {\n              elm.style[k] = opts.style[k] || '';\n            }\n          }\n          if (opts.on) {\n            for (var k in opts.on) {\n              elm.addEventListener(k, opts.on[k]);\n            }\n          }\n          return elm;\n        },\n\n        createElement : function(tagName) {\n          var args = parseArguments(arguments);\n          var elm = document.createElement(tagName);\n          args.children.forEach(function(child) { elm.appendChild(child); });\n          return this.set(elm, args.opts);\n        },\n\n        createSVGElement : function(tagName) {\n          var args = parseArguments(arguments);\n          var elm = document.createElementNS('http://www.w3.org/2000/svg', tagName);\n          args.children.forEach(function(child) { elm.appendChild(child); });\n          return this.set(elm, args.opts);\n        },\n\n        $ : function(elm) { return new $(elm); },\n\n        closest : function(elm, opts) {\n          if (typeof opts.className == 'string') {\n            opts.className = replaceClassNamePrefix(opts.className);\n          }\n          while (elm != null && elm.nodeType == 1 && elm != opts.root) {\n            if (typeof opts.tagName == 'string' && elm.tagName == opts.tagName) {\n              return elm;\n            } else if (typeof opts.$el == 'object' && elm == opts.$el) {\n              return elm;\n            } else if (typeof opts.className == 'string' &&\n                (elm.getAttribute('class') || '').split(/\\s+/g).indexOf(opts.className)!= -1) {\n              return elm;\n            }\n            elm = elm.parentNode;\n          }\n          return null;\n        },\n\n        indexOf : function(elm) {\n          if (elm == null) {\n            return -1;\n          }\n          return Array.prototype.indexOf.call(elm.parentNode.childNodes, elm);\n        },\n\n        offset : function(elm) {\n          var off = { left : 0, top : 0 };\n          var e;\n          var base = null;\n          for (e = elm; e.parentNode != null; e = e.parentNode) {\n            if (e.offsetParent != null) {\n              base = e;\n              break;\n            }\n          }\n          if (base != null) {\n            for (e = base; e.offsetParent != null; e = e.offsetParent) {\n              off.left += e.offsetLeft;\n              off.top += e.offsetTop;\n            }\n          }\n          for (e = elm; e.parentNode != null &&\n                e != document.body; e = e.parentNode) {\n            off.left -= e.scrollLeft;\n            off.top -= e.scrollTop;\n          }\n          return off;\n        },\n\n        moveSublist : function(list, from, length, to) {\n          var i1 = list.slice(from, from + length);\n          var i2 = list.slice(0, from).concat(list.slice(from + length) );\n          to = from < to? to - length : to;\n          return i2.slice(0, to).concat(i1).concat(i2.slice(to) );\n        },\n\n        getCellId : function(row, col) {\n          return row + ':' + col;\n        },\n\n        translate : function(val1, min1, max1, min2, max2, log) {\n          var val2 = (val1 - min1) * (max2 - min2) / (max1 - min1) + min2;\n          return Math.max(min2, Math.min(Math.round(val2), max2) );\n        },\n\n        trimRe : /^[\\s\\u3000]+|[\\s\\u3000]+$/g,\n        trim : function(value) {\n          return value.replace(this.trimRe, '');\n        },\n\n        rtrimRe : /[\\s\\u3000]+$/g,\n        rtrim : function(value) {\n          return value.replace(this.rtrimRe, '');\n        },\n\n        format : function(msg) {\n          for (var i = 1; i < arguments.length; i += 1) {\n            msg = msg.replace(new RegExp('\\\\{' +\n                (i - 1) + '\\\\}'), '' + arguments[i]);\n          }\n          return msg;\n        },\n\n        // num utils\n\n        numRe : /^([\\+\\-]?)([0-9]*)(\\.[0-9]*)?$/,\n\n        formatNumber : function(value, digits, s1, s2) {\n          digits = digits || 0;\n          s1 = typeof s1 == 'string'? s1 : ',';\n          s2 = typeof s2 == 'string'? s2 : '.';\n          if (typeof value == 'number') {\n            value = '' + value;\n          }\n          if (typeof value != 'string') {\n            return '';\n          }\n          var mat = value.match(this.numRe);\n          if (mat) {\n            if (mat[2].length == 0 && (!mat[3] || mat[3].length == 1) ) {\n              return '';\n            }\n            var iPart = mat[2].length > 0? mat[2] : '0';\n            while (iPart.length > 1 && iPart.charAt(0) == '0') {\n              iPart = iPart.substring(1);\n            }\n            var neg = mat[1] == '-';\n            var s = '';\n            while (iPart.length > 3) {\n              s = s1 + iPart.substring(iPart.length - 3) + s;\n              iPart = iPart.substring(0, iPart.length - 3);\n            }\n            s = iPart + s;\n            if (digits > 0) {\n              var fPart = mat[3] || s2;\n              s += s2;\n              for (var i = 0; i < digits; i += 1) {\n                s += (i + 1 < fPart.length)? fPart[i + 1] : '0';\n              }\n            }\n            return (neg && s != '0')? '-' + s : s;\n          }\n          return value;\n        },\n\n        toNarrowNumber : function(value) {\n          var s = '';\n          for (var i = 0; i < value.length; i += 1) {\n            var c = value.charAt(i);\n            var index = wideNumChars.indexOf(c);\n            s += (index != -1)? narrowNumChars.charAt(index) : c;\n          }\n          return s;\n        },\n\n        fillLeftZero : function(s, digits) {\n          while (s.length < digits) { s = '0' + s; }\n          return s;\n        },\n\n        formatYM : function(year, month) {\n          return year + '/' + (month + 1);\n        },\n        /**\n         * format string(8)\n         */\n        formatDate : function(date) {\n          if (typeof date == 'string' && date.match(/^\\d{8}$/) ) {\n            return date.substring(0, 4) +\n              '/' + date.substring(4, 6) +\n              '/' + date.substring(6, 8);\n          } else {\n            return '';\n          }\n        },\n        /**\n         * parse into string(8)\n         */\n        dateRe : /^(\\d{4})\\D(\\d{1,2})\\D(\\d{1,2})$/,\n        parseDate : function(value) {\n          if (typeof value == 'number') {\n            value = '' + value;\n          }\n          if (typeof value == 'string') {\n            var mat = value.match(this.dateRe);\n            if (mat) {\n              value = new Date(+mat[1], +mat[2] - 1, +mat[3]);\n            } else {\n              return value;\n            }\n          }\n          return this.fillLeftZero('' + value.getFullYear(), 4) +\n              this.fillLeftZero('' + (value.getMonth() + 1), 2) +\n              this.fillLeftZero('' + value.getDate(), 2);\n        },\n        strToDate : function(date) {\n          return new Date(\n              +date.substring(0, 4),\n              +date.substring(4, 6) - 1,\n              +date.substring(6, 8) );\n        },\n        min : function(a, b) { return a < b? a : b; },\n        max : function(a, b) { return a > b? a : b; }\n\n      };\n  }();\n\n  var sumOf = function(fn, from, to) {\n    var sum = 0;\n    for (var i = from; i < to; i += 1) {\n      sum += fn(i);\n    }\n    return sum;\n  };\n\n  var sumArr = function(a) {\n    return a.map(function(v, p) {\n      for (var i = 0; i < p; i += 1) {\n        v += a[i];\n      }\n      return v;\n    });\n  };\n\n  var createSpanMap = function() {\n    var spaned = {};\n    return {\n      setSpaned : function(row, col, cell) {\n        for (var r = 0; r < cell.rowSpan; r += 1) {\n          for (var c = 0; c < cell.colSpan; c += 1) {\n            if (r == 0 && c == 0) {\n              // nothing for cell itself.\n            } else {\n              spaned[util.getCellId(row + r, c + col)] = 1;\n            }\n          }\n        }\n      },\n      isSpaned : function(row, col) {\n        return spaned[util.getCellId(row, col)];\n      }\n    };\n  };\n\n  var getOrCrt = function(tagName, index, parent, init) {\n    if (parent.children && index < parent.children.length) {\n      return parent.children[index];\n    }\n    if (!parent.children) {\n      parent.children = [];\n    }\n    var elm = { $el : document.createElement(tagName) };\n    if (init) {\n      init(elm);\n    }\n    parent.$el.appendChild(elm.$el);\n    parent.children.push(elm);\n    return elm;\n  };\n\n  var createEventTarget = function() {\n    var map = {};\n    var listeners = function(type) {\n      return map[type] || (map[type] = []);\n    };\n    return {\n      trigger : function(type, detail) {\n        var ctx = this;\n        listeners(type).forEach(function(listener) {\n          listener.call(ctx, { type : type }, detail);\n        });\n        return this;\n      },\n      on : function(type, listener) {\n        listeners(type).push(listener);\n        return this;\n      },\n      off : function(type, listener) {\n        map[type] = listeners(type).filter(function(l) {\n          return listener != l;\n        });\n        return this;\n      }\n    };\n  };\n\n  var createUIEventTarget = function() {\n    var valid = true;\n    return util.extend(createEventTarget(), {\n      invalidate : function() {\n        valid = false;\n        util.callLater(function() {\n          if (!this.valid) {\n            valid = true;\n            this.render();\n          }\n        }.bind(this) );\n      },\n      render : function() {\n      }\n    });\n  }\n\n  var createDateOptions = function(cell, textField) {\n\n    var range = function(size) {\n      var a = [];\n      for (var i = 0; i < size; i += 1) {\n        a.push(i);\n      }\n      return a;\n    };\n\n    var cs = window.getComputedStyle(textField, null);\n    var fontStyle = { fontFamily : cs.fontFamily, fontSize : cs.fontSize };\n    var dayNames = i18n.getInstance().messages.DAY_NAMES.split(/,/g);\n\n    var createButton = function(next, action) {\n      var style = { position : 'absolute', top : '0px' };\n      var transform;\n      if (next) {\n        style.right = '0px';\n        transform = 'translate(0 0)';\n      } else {\n        style.left = '0px';\n        transform = 'rotate(180) translate(-16 -16)';\n      }\n      return util.createSVGElement('svg', {\n        attrs : { width : '16', height : '16' },\n        style : style,\n        on : { click : function(event) {\n          action();\n        }}\n      }, [\n        util.createSVGElement('rect', {\n          attrs : { 'class' : '${prefix}-cal-button',\n            x : '1', y : '1', width : '14', height : '14' } }),\n        util.createSVGElement('path', {\n          attrs : { 'class' : '${prefix}-cal-button-arrow',\n            d : 'M4 2L12 8L4 14', transform : transform },\n          style : { pointerEvents : 'none' } })\n      ]);\n    };\n\n    var calHead = util.createElement('div', {\n        style : { position : 'relative' } }, [\n      util.createElement('div', {\n        style : util.extend({ textAlign : 'center',\n          paddingLeft : '16px', paddingRight : '16px' }, fontStyle),\n        props : { textContent : 'title'},\n        on : { click : function() {\n          model.displayDate = new Date(\n              model.today.getFullYear(),\n              model.today.getMonth(), 1);\n          render();\n        } } }),\n      createButton(false, function() {\n        model.displayDate = new Date(\n            model.displayDate.getFullYear(),\n            model.displayDate.getMonth() - 1, 1);\n        render();\n      }),\n      createButton(true, function() {\n        model.displayDate = new Date(\n            model.displayDate.getFullYear(),\n            model.displayDate.getMonth() + 1, 1);\n        render();\n      })\n    ]);\n\n    var calBody = util.createElement('table',\n        { attrs : { cellSpacing : '0' } }, [\n      util.createElement('thead', [\n        util.createElement('tr', range(7).map(function(i) {\n        return util.createElement('th',\n            { props : { textContent : dayNames[i] }, style : fontStyle });\n      }) ) ] ),\n      util.createElement('tbody', range(6).map(function() {\n        return util.createElement('tr', range(7).map(function() {\n          return util.createElement('td', { style : fontStyle });\n        }) );\n      }) )\n    ]);\n\n    var frame = util.createElement('div', {\n      attrs : { 'class': '${prefix}-calendar' },\n      style : { position : 'absolute' },\n      on : {\n        mousedown : function(event) {\n          if (event.which != 1) {\n            return;\n          }\n          event.preventDefault();\n          var td = util.closest(event.target, { tagName : 'TD' });\n          if (td != null) {\n            var tdIndex = util.indexOf(td);\n            var trIndex = util.indexOf(td.parentNode);\n            var date = new Date(model.displayDate.getFullYear(),\n                model.displayDate.getMonth(),\n                model.displayDate.getDate() - model.displayDate.getDay() +\n                trIndex * 7 + tdIndex);\n            setSelectedDate(date);\n            setVisible(false);\n          }\n        }\n      }\n    }, [ calHead, calBody ]);\n\n    var model = {\n      today : function() {\n        var today = new Date();\n        return new Date(\n            today.getFullYear(), today.getMonth(), today.getDate() );\n      }(),\n      selectedDate : null,\n      displayDate : null,\n      visible : true\n    };\n\n    !function() {\n      if (typeof cell.value == 'string' && cell.value.match(/^\\d{8}$/) ) {\n        model.selectedDate = util.strToDate(cell.value);\n      } else {\n        model.selectedDate = null;\n      }\n    }();\n\n    var setSelectedDate = function(date) {\n      model.selectedDate = date;\n      scrollIntoView(model.selectedDate);\n      var value = model.selectedDate? util.parseDate(model.selectedDate) : '';\n      var label = value? util.formatDate(value) : '';\n      options.trigger('valuechange', { value : value, label : label });\n    };\n\n    var setVisible = function(visible) {\n      model.visible = visible;\n      options.$el.style.display = visible? '' : 'none';\n    };\n\n    var scrollIntoView = function(date) {\n      date = date || model.today;\n      model.displayDate = new Date(date.getFullYear(), date.getMonth(), 1);\n      render();\n    };\n\n    var render = function() {\n      var displayDate = model.displayDate;\n      var d = 0;\n      calHead.firstChild.textContent = util.formatYM(\n          displayDate.getFullYear(),\n          displayDate.getMonth() );\n      var tbody = calBody.childNodes[1];\n      for (var row = 0; row < 6; row += 1) {\n        for (var col = 0; col < 7; col += 1) {\n          var date = new Date(\n              displayDate.getFullYear(),\n              displayDate.getMonth(),\n              displayDate.getDate() - displayDate.getDay() + d);\n          var className = '';\n          if (date.getFullYear() == displayDate.getFullYear() &&\n              date.getMonth() == displayDate.getMonth() ) {\n            className += ' ${prefix}-current-month';\n          }\n          if (model.selectedDate &&\n              model.selectedDate.getTime() == date.getTime() ) {\n            className += ' ${prefix}-selected-date';\n          }\n          if (model.today.getTime() == date.getTime() ) {\n            className += ' ${prefix}-today';\n          }\n          util.set(tbody.childNodes[row].childNodes[col], {\n            attrs : { 'class' : className },\n            props : { textContent : '' + date.getDate() }\n          });\n          d += 1;\n        }\n      }\n    }\n\n    var rollDate = function(offset) {\n      setVisible(true);\n      if (model.selectedDate) {\n        setSelectedDate(new Date(\n            model.selectedDate.getFullYear(),\n            model.selectedDate.getMonth(),\n            model.selectedDate.getDate() + offset) );\n      } else {\n        setSelectedDate(model.today);\n      }\n    };\n\n    scrollIntoView(model.selectedDate);\n\n    var keydownHandler = function(event) {\n\n      switch(event.keyCode) {\n/*\n      case 37: // Left\n        event.preventDefault();\n        event.stopPropagation();\n        rollDate(-1);\n        break;\n*/\n      case 38: // Up\n        event.preventDefault();\n        event.stopPropagation();\n        //rollDate(-7);\n        rollDate(-1);\n        break;\n/*\n      case 39: // Right\n        event.preventDefault();\n        event.stopPropagation();\n        rollDate(1);\n        break;\n*/\n      case 40: // Down\n        event.preventDefault();\n        event.stopPropagation();\n        //rollDate(7);\n        rollDate(1);\n        break;\n\n      case 27: // Esc\n        event.preventDefault();\n        event.stopPropagation();\n        setVisible(false);\n        break;\n      }\n    };\n\n    var mousedownHandler = function(event) {\n      if (event.which != 1) {\n        return;\n      }\n      // toggle visible\n      setVisible(!model.visible);\n    };\n\n    util.$(textField).\n      on('keydown', keydownHandler).\n      on('mousedown', mousedownHandler);\n\n    var options = util.extend(createEventTarget(), {\n      $el : frame,\n      dispose : function() {\n        util.$(textField).\n          off('keydown', keydownHandler).\n          off('mousedown', mousedownHandler);\n      }\n    });\n\n    return options;\n  };\n\n  var createSelectOptions = function(cell, textField) {\n\n    var width = 100;\n    var height = 100;\n\n    var cs = window.getComputedStyle(textField, null);\n    var vScr = createScr('v');\n    var view = util.createElement('div', {\n      style : { position : 'absolute', overflow : 'hidden' }\n    });\n    var frame = util.createElement('div', {\n      attrs : { 'class': '${prefix}-select' },\n      style : { position : 'absolute',\n        width : width + 'px', height : height + 'px',\n        fontFamily : cs.fontFamily, fontSize : cs.fontSize\n      },\n      on : {\n        mousedown : function(event) {\n          event.preventDefault();\n          var item = util.closest(event.target,\n              { className : '${prefix}-select-option' });\n          if (item) {\n            setSelectedIndex(model.items.children[util.indexOf(item)].index);\n            setVisible(false);\n          }\n        },\n        wheel : function(event) {\n          event.preventDefault();\n          vScr.scrollTop += event.deltaY;\n        }\n      }\n    }, [ view, vScr ]);\n\n    util.set(vScr, {\n      on : {\n        scroll : function() {\n          render();\n        }\n      }\n    });\n\n    // append to measure.\n    document.body.appendChild(frame);\n    var itemHeight = function(target) {\n      var tmpItem = util.createElement('div');\n      tmpItem.textContent = '＠';\n      target.appendChild(tmpItem);\n      try {\n        return tmpItem.offsetHeight;\n      } finally {\n        target.removeChild(tmpItem);\n      }\n    }(view);\n    var scrSize = measureScrSize(frame);\n    // end measure\n    document.body.removeChild(frame);\n\n    var model = {\n      options : null,\n      indexByValue : null,\n      selectedIndex : -1,\n      items : { $el : view },\n      visible : true,\n      getIndexByValue : function(value) {\n        if (!this.indexByValue) {\n          var indexByValue = {};\n          this.options.forEach(function(option, i) {\n            indexByValue[option.value] = i;\n          });\n          this.indexByValue = indexByValue;\n        }\n        var index = this.indexByValue[value];\n        return typeof index == 'number'? index : -1;\n      },\n      lastValue : textField.value\n    };\n\n    var setOptions = function(options) {\n      model.options = options;\n      model.indexByValue = null;\n    };\n    var getDefaultOptions = function() {\n      return cell.options? cell.options() : [];\n    };\n\n    var setSelectedIndex = function(selectedIndex) {\n      if (0 <= selectedIndex && selectedIndex < model.options.length) {\n        model.selectedIndex = selectedIndex;\n        scrollIntoView(model.selectedIndex);\n        options.trigger('valuechange', model.options[selectedIndex]);\n      } else {\n        model.selectedIndex = -1;\n        options.trigger('valuechange',\n            { label : util.trim(textField.value) });\n      }\n    };\n\n    var setVisible = function(visible) {\n      model.visible = visible;\n      options.$el.style.display = model.visible? '' : 'none';\n    };\n\n    var scrollIntoView = function(index) {\n      var minIndex = Math.ceil(vScr.scrollTop / itemHeight);\n      var maxIndex = Math.floor( (vScr.scrollTop + height) / itemHeight) - 1;\n      var offsetTop = 0;\n      while (index < minIndex && 0 < minIndex) {\n        offsetTop -= itemHeight;\n        minIndex -= 1;\n      }\n      while (index > maxIndex && maxIndex < model.options.length - 1) {\n        offsetTop += itemHeight;\n        maxIndex += 1;\n      }\n      vScr.scrollTop += offsetTop;\n      render();\n    };\n\n    var render = function() {\n\n      util.set(view, { style : {\n        left : '0px', top : '0px',\n        width : (width - scrSize.width) + 'px', height : height + 'px' } });\n      util.set(vScr, { style : {\n        left : (width - scrSize.width) + 'px', top : '0px',\n        width : scrSize.width + 'px', height : height + 'px' } });\n      util.set(vScr.firstChild, { style : {\n        height : itemHeight * model.options.length + 'px' } });\n\n      var top = -vScr.scrollTop % itemHeight;\n      var index = Math.floor(vScr.scrollTop / itemHeight);\n      var itemIndex = 0;\n\n      view.scrollTop = -top;\n\n      while (top < height) {\n\n        var item = getOrCrt('div', itemIndex, model.items, function(item) {\n          util.set(item.$el, {\n            style : { overflow : 'hidden', whiteSpace : 'nowrap' }\n          });\n        });\n\n        item.index = index;\n        item.option = model.options[index] || { label : '' };\n\n        var className = '${prefix}-select-option';\n        if (index == model.selectedIndex) {\n          className += ' ${prefix}-select-option-selected';\n        }\n        util.set(item.$el, {\n          attrs : { 'class' : className },\n          props : { textContent : item.option.label || '' },\n          style : { height : itemHeight + 'px' }\n        });\n\n        index += 1;\n        itemIndex += 1;\n        top += itemHeight;\n      }\n    };\n\n    var keydownHandler = function(event) {\n\n      switch(event.keyCode) {\n\n      case 38: // Up\n        event.preventDefault();\n        event.stopPropagation();\n        setVisible(true);\n        setSelectedIndex(model.selectedIndex - 1);\n        break;\n\n      case 40: // Down\n        event.preventDefault();\n        event.stopPropagation();\n        setVisible(true);\n        setSelectedIndex(model.selectedIndex + 1);\n        break;\n\n      case 27: // Esc\n        event.preventDefault();\n        event.stopPropagation();\n        setVisible(false);\n        break;\n      }\n    };\n\n    var keyupHandler = function(event) {\n      switch(event.keyCode) {\n      case 37: // Left\n      case 38: // Up\n      case 39: // Right\n      case 40: // Down\n        break;\n      default :\n        var value = util.trim(textField.value);\n        if (model.lastValue != value) {\n          model.lastValue = value;\n          value = value.toUpperCase();\n          var options = [];\n          getDefaultOptions().forEach(function(option, i) {\n            if (option.label.toUpperCase().indexOf(value) != -1) {\n              options.push(option);\n            }\n          });\n          setOptions(options);\n          setSelectedIndex(-1);\n          render();\n        }\n        break;\n      }\n    };\n\n    var mousedownHandler = function(event) {\n      if (event.which != 1) {\n        return;\n      }\n      // toggle visible\n      setVisible(!model.visible);\n    };\n\n    util.$(textField).\n      on('keydown', keydownHandler).\n      on('keyup', keyupHandler).\n      on('mousedown', mousedownHandler);\n\n    var options = util.extend(createEventTarget(), {\n      $el : frame,\n      dispose : function() {\n        util.$(textField).\n          off('keydown', keydownHandler).\n          off('keyup', keyupHandler).\n          off('mousedown', mousedownHandler);\n      }\n    });\n\n    setOptions(getDefaultOptions() );\n    model.selectedIndex = model.getIndexByValue(cell.value);\n    util.callLater(function() {\n      scrollIntoView(model.selectedIndex);\n    });\n\n    return options;\n  };\n\n  var defaultCellRendererFactory = function(td) {\n\n    var label = util.createElement('span');\n    td.$el.appendChild(label);\n\n    var textField = null;\n    var options = null;\n\n    // label value cache.\n    var labelValue = null;\n\n    var getLabelValue = function(cell, value) {\n      if (cell.dataType == 'number') {\n        return util.formatNumber(util.toNarrowNumber(value),\n            cell.decimalDigits || 0);\n      } else if (cell.dataType == 'date') {\n        return util.formatDate(value);\n      } else if (cell.dataType == 'select-one') {\n      }\n      if (cell.labelFunction) {\n        return cell.labelFunction(value);\n      }\n      return value;\n    };\n\n    var getEditorValue = function(cell, value) {\n      if (typeof value == 'undefined' || value === null) {\n        return '';\n      }\n      if (cell.dataType == 'number') {\n      } else if (cell.dataType == 'date') {\n        return getLabelValue(cell, value);\n      } else if (cell.dataType == 'select-one') {\n        return getLabelValue(cell, value);\n      }\n      return value;\n    };\n\n    var getValue = function(cell, value) {\n\n      if (cell.dataType == 'number') {\n        value = util.toNarrowNumber(value);\n        if (value.length == 0) {\n          return value;\n        } else if (value.match(util.numRe) ) {\n          return util.formatNumber(value, cell.decimalDigits || 0, '');\n        } else {\n          return cell.value;\n        }\n      } else if (cell.dataType == 'date') {\n        value = util.toNarrowNumber(value);\n        if (value.length == 0) {\n          return value;\n        } else if (value.match(util.dateRe) ) {\n          return util.parseDate(value);\n        } else {\n          return cell.value;\n        }\n      } else if (cell.dataType == 'select-one') {\n        if (options.selected) {\n          if (typeof options.selected.value == 'undefined') {\n            if (cell.allowAnonymousOption) {\n              return options.selected.label;\n            }\n          } else {\n            return options.selected.value;\n          }\n        }\n        return cell.value;\n      }\n\n      return value;\n    };\n\n    return {\n\n      render : function(cell) {\n        var value = getLabelValue(cell, cell.value);\n        if (labelValue !== value) {\n          label.textContent = value || '\\u00a0';\n          labelValue = value;\n        }\n      },\n\n      beginEdit : function(cell) {\n\n        console.log('beginEdit', cell);\n\n        if (textField == null) {\n          var cs = window.getComputedStyle(td.$el, null);\n          textField = util.createElement('input', {\n            attrs : { type : 'text' },\n            style : {\n              width : '100%', height : '100%',\n              border : 'none', outline : 'none',\n              backgroundColor : 'transparent',\n              fontFamily : cs.fontFamily,\n              fontSize : cs.fontSize,\n              textAlign : cs.textAlign\n            } });\n          td.$el.appendChild(textField);\n        }\n\n        if (options == null) {\n          if (cell.dataType == 'date') {\n            options = createDateOptions(cell, textField).\n              on('valuechange', function(event, detail) {\n                textField.value = detail.label;\n                textField.select();\n                options.selected = detail;\n              });\n            document.body.appendChild(options.$el);\n          } else if (cell.dataType == 'select-one') {\n            options = createSelectOptions(cell, textField).\n              on('valuechange', function(event, detail) {\n                if (typeof detail.value != 'undefined') {\n                  textField.value = detail.label;\n                  textField.select();\n                }\n                options.selected = detail;\n              });\n            document.body.appendChild(options.$el);\n          }\n        }\n\n        if (options) {\n          var off = util.offset(td.$el);\n          options.$el.style.left = (off.left) +'px';\n          options.$el.style.top = (off.top + td.$el.offsetHeight) +'px';\n        }\n\n        label.style.display = 'none';\n        textField.style.display = '';\n        textField.value = getEditorValue(cell, cell.value);\n        textField.focus();\n        textField.select();\n\n        return {\n          endEdit : function() {\n\n            console.log('endEdit', cell);\n\n            var value = getValue(cell, util.rtrim(textField.value) );\n\n            if (options != null) {\n              document.body.removeChild(options.$el);\n              options.dispose();\n              options = null;\n            }\n            label.style.display = '';\n            textField.style.display = 'none';\n            return { newValue : value, oldValue : cell.value };\n          }\n        };\n      },\n      dispose : function() {\n        if (textField != null) {\n          td.$el.removeChild(textField);\n          textField = null;\n        }\n      }\n    };\n  };\n\n  var createInnerTableModel = function() {\n    return util.extend(createEventTarget(), {\n      maxRowSpan : 10,\n      maxColSpan : 10,\n      getRowCount : function() { return 10000; },\n      getColumnCount : function() { return 10000; },\n      getCellWidthAt : function(col) { return 50; },\n      getCellHeightAt : function(row) { return 20; },\n      getCellAt : function(row, col, hint) {\n        return { value : row + ',' + col, colSpan : 1, rowSpan : 1 };\n      }\n    });\n  };\n\n  var createTableModel = function() {\n    return util.extend(createInnerTableModel(), {\n      getContentWidth : function() { return 345; },\n      getNumColumns : function() { return [ 1, 2, 10000 ]; },\n      getNumRows : function() { return [ 3, 5000, 4 ]; },\n      getRowCount : function() {\n        var rowCount = 0;\n        this.getNumRows().forEach(function(numRow) {\n          rowCount += numRow;\n        });\n        return rowCount;\n      },\n      getColumnCount : function() {\n        var columnCount = 0;\n        this.getNumColumns().forEach(function(numColumn) {\n          columnCount += numColumn;\n        });\n        return columnCount;\n      }\n    });\n  };\n\n  var createScr = function(orientation) {\n    var style = { position : 'absolute',\n        left : '0px', top : '0px',\n        width : '0px', height : '0px' };\n    if (orientation == 'h') {\n      style.overflowX = 'scroll';\n      style.overflowY = 'hidden';\n    } else if (orientation == 'v') {\n      style.overflowX = 'hidden';\n      style.overflowY = 'scroll';\n    } else {\n      style.overflow = 'scroll';\n    }\n    return util.createElement('div', { style : style },\n      [ util.createElement('div', {\n        style : { position : 'absolute', left : '0px', top : '0px',\n          width : '1px', height : '1px' }\n      }) ]);\n  };\n\n  var measureScrSize = function(target) {\n    var tmpScr = createScr();\n    tmpScr.style.width =\n      tmpScr.style.height = '50px';\n    tmpScr.firstChild.style.width =\n      tmpScr.firstChild.style.height = '100px';\n    target.appendChild(tmpScr);\n    try {\n      return {\n        width : tmpScr.offsetWidth - tmpScr.clientWidth,\n        height : tmpScr.offsetHeight - tmpScr.clientHeight\n      };\n    } finally {\n      target.removeChild(tmpScr);\n    }\n  };\n\n  var createBar = function(className, style) {\n    return util.createElement('div', {\n      attrs : { 'class' : className },\n      style : { position : 'absolute',\n        left : '0px', top : '0px', width : '0px', height : '0px' } });\n  };\n\n  var createResizeHandle = function(className, style) {\n\n    var backgroundColor = 'rgba(0,0,255,0)';\n\n    var mousedownHandler = function(event) {\n\n      var mousemoveHandler = function(event) {\n        deltaX = event.pageX - dragX;\n        bar.style.left = (deltaX - 1) + 'px';\n      };\n\n      var mouseupHandler = function(event) {\n        util.$(document).\n          off('mousemove', mousemoveHandler).\n          off('mouseup', mouseupHandler);\n        document.body.removeChild(block);\n        bar.style.display = 'none';\n        body.trigger('move', { deltaX : deltaX });\n      };\n\n      event.preventDefault();\n\n      var dragX = event.pageX;\n      var deltaX = 0;\n\n      util.$(document).\n        on('mousemove', mousemoveHandler).\n        on('mouseup', mouseupHandler);\n\n      var block = util.createElement('div',\n        { style : { position : 'absolute',\n          cursor : 'ew-resize', backgroundColor : backgroundColor,\n          left : document.documentElement.scrollLeft + 'px',\n          top : document.documentElement.scrollTop + 'px',\n          width : window.innerWidth + 'px',\n          height : window.innerHeight  + 'px'\n        } });\n      document.body.appendChild(block);\n      bar.style.left = '-1px';\n      bar.style.height = body.barHeight + 'px';\n      bar.style.display = '';\n    };\n\n    var bar = util.createElement('div', {\n      attrs : { 'class' : '${prefix}-resize-bar' },\n      style : { position : 'absolute', display : 'none',\n        left : '-1px', top : '0px', width : '0px', height : '100px' }\n      });\n\n    var handle = util.createElement('div', {\n        style : { position : 'absolute', \n          left : '-3px', top : '0px', width : '5px', height : '100%',\n          cursor : 'ew-resize', backgroundColor : backgroundColor },\n        on : { mousedown : mousedownHandler }\n      });\n    var body = util.extend(createEventTarget(), {\n      $el : util.createElement('div', {\n          style : { position : 'absolute', overflow : 'visible',\n            left : '0px', top : '0px', width : '0px', height : '0px' }\n        }, [ bar, handle ]),\n      barHeight : 100\n    });\n    return body;\n  };\n\n  var createTable = function(tableModel) {\n\n    var tables = [];\n    !function() {\n      for (var i = 0; i < 9; i += 1) {\n        tables.push(createInnerTable() );\n      }\n    }();\n    tables.forEach(function(table, t) {\n\n      table.model = tableModel;\n      table.tblCol = t % 3;\n      table.tblRow = ~~(t / 3);\n\n      util.$(table.$el).on('wheel', function(event) {\n        event.preventDefault();\n        if (table.tblCol == 1) {\n          hScr1.scrollLeft += event.deltaX;\n        } else if (table.tblCol == 2) {\n          hScr2.scrollLeft += event.deltaX;\n        }\n        if (table.tblRow == 1) {\n          vScr1.scrollTop += event.deltaY;\n        }\n      });\n    });\n\n    var hScr1 = createScr('h');\n    var hScr2 = createScr('h');\n    var vScr1 = createScr('v');\n\n    [ hScr1, hScr2, vScr1 ].forEach(function(scr) {\n      util.set(scr, { on : {\n        scroll : function(event) {\n          table.render();\n        }\n      } });\n    });\n\n    var hBar1 = createBar('${prefix}-h-bar');\n    var hBar2 = createBar('${prefix}-h-bar');\n    var vBar1 = createBar('${prefix}-v-bar');\n    var vBar2 = createBar('${prefix}-v-bar');\n\n    var vSplitHandle = createResizeHandle().\n        on('move', function(event, detail) {\n      table.model.trigger('contentwidthchange', detail);\n    });\n\n    var columnResizeHandles = [];\n\n    var listenerWrapper = function(listener) {\n      return function(event) {\n        var td = util.closest(event.target, { tagName : 'TD' });\n        if (td) {\n          var tr = td.parentNode;\n          var tbody = tr.parentNode;\n          var tdIndex = util.indexOf(td);\n          var trIndex = util.indexOf(tr);\n          td = null;\n          tables.forEach(function(table) {\n            if (table.tbody.$el == tbody) {\n              td = table.tbody.children[trIndex].children[tdIndex];\n            }\n          });\n          table.trigger(event.type, { originalEvent : event,\n            row : td.row, col : td.col });\n        }\n        listener(event, td);\n      };\n      \n    };\n    var frame = util.createElement('div', {\n      style : { position : 'relative', overflow : 'hidden' },\n      on : {\n        click : listenerWrapper(function(event, td) {\n          if (td == null) {\n            return;\n          }\n        }),\n        mousedown : listenerWrapper(function(event, td) {\n          if (td == null) {\n            editor.endEdit();\n            return;\n          }\n          if (event.which != 1) {\n            return;\n          }\n          if (!editor.cell ||\n              editor.cell.row != td.row ||\n              editor.cell.col != td.col) {\n            if (editor.isEditableAt(td.row, td.col) ) {\n              event.preventDefault();\n              editor.beginEdit(td.row, td.col, true);\n            }\n          } else if (editor.cell) {\n            editor.editing = true;\n          }\n        }),\n        focusout : function(event) {\n          editor.endEdit();\n        },\n        keydown : function(event) {\n\n          switch(event.keyCode) {\n\n          case 113: // F2\n            event.preventDefault();\n            editor.editing = true;\n            break;\n\n          case 27: // Esc\n            event.preventDefault();\n            var cell = editor.cell;\n            editor.endEdit(true); // cancel edit.\n            editor.beginEdit(cell.row, cell.col);\n            break;\n\n          case 13: // Enter\n            event.preventDefault();\n            editor.move(event.shiftKey? -1 : 1, 0);\n            break;\n\n          case 9: // Tab\n            event.preventDefault();\n            editor.move(0, event.shiftKey? -1 : 1);\n            break;\n\n          case 37 : // Left\n            if (!editor.editing) {\n              event.preventDefault();\n              editor.move(0, -1);\n            }\n            break;\n\n          case 38 : // Up\n            if (!editor.editing) {\n              event.preventDefault();\n              editor.move(-1, 0);\n            }\n            break;\n\n          case 39 : // Right\n            if (!editor.editing) {\n              event.preventDefault();\n              editor.move(0, 1);\n            }\n            break;\n\n          case 40 : // Down\n            if (!editor.editing) {\n              event.preventDefault();\n              editor.move(1, 0);\n            }\n            break;\n\n          default :\n            break;\n          }\n        }\n      }\n    }, tables.map(function(table) { return table.$el; }).\n      concat([\n        hScr1, hScr2, vScr1,\n        hBar1, hBar2, vBar1, vBar2,\n        vSplitHandle.$el ]) );\n\n    var scrollIntoView = function(table, row, col) {\n\n      var left = table.tableState.tableLeft;\n      var top = table.tableState.tableTop;\n      var minCol = table.tableState.minCol;\n      var minRow = table.tableState.minRow;\n\n      while (row < minRow) {\n        minRow -= 1;\n        top -= table.model.getCellHeightAt(minRow);\n      }\n      while (minRow < row) {\n        top += table.model.getCellHeightAt(minRow);\n        minRow += 1;\n      }\n      while (col < minCol) {\n        minCol -= 1;\n        left -= table.model.getCellWidthAt(minCol);\n      }\n      while (minCol < col) {\n        left += table.model.getCellWidthAt(minCol);\n        minCol += 1;\n      }\n\n      var width = table.model.getCellWidthAt(col);\n      var height = table.model.getCellHeightAt(row);\n\n      var deltaX = (left < 0)? left :\n        (table.width < left + width)? (left + width) - table.width : 0;\n      var deltaY = (top < 0)? top :\n        (table.height < top + height)? (top + height) - table.height : 0;\n\n      var scrolled = deltaX != 0 || deltaY != 0;\n\n      if (scrolled) {\n        if (table.tblCol == 1) {\n          hScr1.scrollLeft += deltaX;\n        } else if (table.tblCol == 2) {\n          hScr2.scrollLeft += deltaX;\n        }\n        if (table.tblRow == 1) {\n          vScr1.scrollTop += deltaY;\n        }\n      }\n\n      return scrolled;\n    };\n\n    var editor = {\n\n      impl : null,\n      cell : null,\n      editing : false,\n\n      isValidCell : function(row, col) {\n        var rowCount = table.model.getRowCount();\n        var columnCount = table.model.getColumnCount();\n        return 0 <= row && row < rowCount && 0 <= col && col < columnCount;\n      },\n      move : function(offsetRow, offsetCol) {\n        var row = editor.cell.row;\n        var col = editor.cell.col;\n        do {\n          row += offsetRow;\n          col += offsetCol;\n        } while (!this.isEditableAt(row, col) &&\n            this.isValidCell(row + offsetRow, col + offsetCol) );\n        if (this.isEditableAt(row, col) ) {\n          this.beginEdit(row, col, true);\n        }\n      },\n      isEditableAt : function(row, col) {\n        return this.isValidCell(row, col) &&\n          table.model.getCellAt(row, col).editable === true;\n      },\n      beginEdit : function(row, col, v) {\n\n        this.endEdit();\n\n        var targetTable = null;\n        var rows = sumArr([0].concat(table.model.getNumRows() ) );\n        var columns = sumArr([0].concat(table.model.getNumColumns() ) );\n\n        tables.forEach(function(table) {\n          if (rows[table.tblRow] <= row && row < rows[table.tblRow + 1] &&\n              columns[table.tblCol] <= col && col < columns[table.tblCol + 1]) {\n            targetTable = table;\n          }\n        });\n\n        if (!targetTable) {\n          return;\n        }\n\n        if (scrollIntoView(targetTable, row, col) ) {\n          // scrolled, then render.\n          table.render();\n        }\n\n        var targetTd = null;\n        targetTable.tbody.children.forEach(function(tr) {\n          tr.children.forEach(function(td) {\n            if (td.row == row && td.col == col) {\n              if (targetTd == null) {\n                targetTd = td;\n              }\n            }\n          });\n        });\n\n        if (targetTd == null) {\n          return;\n        }\n\n        this.impl = targetTd.renderer.beginEdit(\n            table.model.getCellAt(row, col) );\n        this.cell = { row : row, col : col };\n        this.editing = false;\n      },\n\n      endEdit :function(cancel) {\n\n        if (this.impl == null) {\n          return;\n        }\n\n        var impl = this.impl;\n        var cell = this.cell;\n        this.impl = null;\n        this.cell = null;\n\n        // IE will call endEdit again on focusout.\n        var endState = impl.endEdit();\n\n        if (cancel) {\n          return;\n        }\n\n        if (endState && endState.newValue !== endState.oldValue) {\n          table.model.trigger('valuechange', {\n            row : cell.row,\n            col : cell.col,\n            newValue : endState.newValue,\n            oldValue : endState.oldValue\n          });\n        }\n      }\n    }\n\n    var table = util.extend(createUIEventTarget(), {\n\n      $el : frame,\n\n      model : tableModel,\n\n      tables : tables,\n\n      render : function() {\n\n        var scrSize = measureScrSize(this.$el);\n\n        var frameSize = {\n          width : this.$el.clientWidth,\n          height : this.$el.clientHeight\n        };\n\n        var rowCount = this.model.getRowCount();\n        var columnCount = this.model.getColumnCount();\n        var numRows = this.model.getNumRows();\n        var numColumns = this.model.getNumColumns();\n\n        // setup widths and heights\n        var widths = [\n          sumOf(this.model.getCellWidthAt.bind(this.model),\n              0, numColumns[0]),\n          sumOf(this.model.getCellWidthAt.bind(this.model),\n              numColumns[0], numColumns[0] + numColumns[1]),\n          sumOf(this.model.getCellWidthAt.bind(this.model),\n              numColumns[0] + numColumns[1], columnCount)\n        ];\n        var heights = [\n          sumOf(this.model.getCellHeightAt.bind(this.model),\n              0, numRows[0]),\n          sumOf(this.model.getCellHeightAt.bind(this.model),\n              numRows[0], rowCount - numRows[2]),\n          sumOf(this.model.getCellHeightAt.bind(this.model),\n              rowCount - numRows[2], rowCount)\n        ];\n\n        // setup rows and columns\n        var rows = sumArr([0].concat(numRows) );\n        var columns = sumArr([0].concat(numColumns) );\n\n        // setup contentWidth\n        var contentWidth = Math.max(10,\n            Math.min(this.model.getContentWidth(), widths[1]) );\n\n        //\n        hBar1.style.top = (heights[0] - 1) + 'px';\n        hBar1.style.width = frameSize.width + 'px';\n        hBar2.style.top = (frameSize.height -\n            (heights[2] + scrSize.height) - 1) + 'px';\n        hBar2.style.width = frameSize.width + 'px';\n\n        vBar1.style.left = (widths[0] - 1) + 'px';\n        vBar1.style.height = frameSize.height + 'px';\n        vBar2.style.left = (widths[0] + contentWidth - 1) + 'px';\n        vBar2.style.height = frameSize.height + 'px';\n\n        vSplitHandle.$el.style.left = (widths[0] + contentWidth) + 'px';\n        vSplitHandle.$el.style.height = heights[0] + 'px';\n        vSplitHandle.barHeight = frameSize.height - scrSize.height;\n\n        tables.forEach(function(table, t) {\n\n          table.rowFrom = rows[table.tblRow];\n          table.rowTo = rows[table.tblRow + 1];\n          table.colFrom = columns[table.tblCol];\n          table.colTo = columns[table.tblCol + 1];\n\n          if (table.tblCol == 0) {\n            table.$el.style.left = '0px';\n            table.left = 0;\n            table.width = widths[0];\n          } else if (table.tblCol == 1) {\n            table.$el.style.left = widths[0] + 'px';\n            table.left = -hScr1.scrollLeft;\n            table.width = contentWidth;\n          } else if (table.tblCol == 2) {\n            table.$el.style.left = (widths[0] + contentWidth) + 'px';\n            table.left = -hScr2.scrollLeft;\n            table.width = frameSize.width -\n              (widths[0] + contentWidth + scrSize.width);\n          }\n\n          if (table.tblRow == 0) {\n            table.$el.style.top = '0px';\n            table.top = 0;\n            table.height = heights[0];\n          } else if (table.tblRow == 1) {\n            table.$el.style.top = heights[0] + 'px';\n            table.top = -vScr1.scrollTop;\n            table.height = frameSize.height -\n                (heights[0] + heights[2] + scrSize.height);\n          } else if (table.tblRow == 2) {\n            table.$el.style.top = (frameSize.height -\n                (heights[2] + scrSize.height) ) + 'px';\n            table.top = 0;;\n            table.height = heights[2];\n          }\n\n          // layout scrollbars.\n          if (table.tblCol == 2 && table.tblRow == 1) {\n            util.set(vScr1, {\n              style : {\n                left : (frameSize.width - scrSize.width) + 'px',\n                top : heights[0]+ 'px',\n                width : scrSize.width + 'px',\n                height : table.height + 'px'\n              }\n            });\n            util.set(vScr1.firstChild, {\n              style : { height : heights[1] + 'px' }\n            });\n          } else if (table.tblRow == 2 && table.tblCol == 1) {\n            util.set(hScr1, {\n              style : {\n                left : widths[0] + 'px',\n                top : (frameSize.height - scrSize.height) + 'px',\n                width : table.width + 'px',\n                height : scrSize.height + 'px'\n              }\n            });\n            util.set(hScr1.firstChild, {\n              style : { width : widths[1] + 'px' }\n            });\n          } else if (table.tblRow == 2 && table.tblCol == 2) {\n            util.set(hScr2, {\n              style : {\n                left : (widths[0] + contentWidth) + 'px',\n                top : (frameSize.height - scrSize.height) + 'px',\n                width : table.width + 'px',\n                height : scrSize.height + 'px'\n              }\n            });\n            util.set(hScr2.firstChild, {\n              style : { width : widths[2] + 'px' }\n            });\n          }\n\n          table.prepare();\n\n        }.bind(this));\n\n        !function(table, tableState) {\n          var left = tableState.tableLeft + widths[0];\n          var handleIndex = 0;\n          var handle;\n          for (var col = tableState.minCol;\n              col < tableState.maxCol; col += 1) {\n            if (handleIndex >= columnResizeHandles.length) {\n              var handle = createResizeHandle().\n                on('move', function(event, detail) {\n                  table.model.trigger('cellwidthchange',\n                      { col : this.col, deltaX : detail.deltaX });\n                });\n              frame.appendChild(handle.$el);\n              columnResizeHandles.push(handle);\n            }\n            left += this.model.getCellWidthAt(col);\n            handle = columnResizeHandles[handleIndex];\n            handle.$el.style.display = '';\n            handle.$el.style.left = left + 'px';\n            handle.$el.style.height = heights[0] + 'px';\n            handle.col = col;\n            handle.barHeight = frameSize.height - scrSize.height;\n            handleIndex += 1;\n          }\n          for (;handleIndex < columnResizeHandles.length; handleIndex += 1) {\n            handle = columnResizeHandles[handleIndex];\n            columnResizeHandles[handleIndex].$el.style.display = 'none';\n          }\n          \n        }.bind(this)(table, tables[1].tableState);\n\n        var createDetail = function() {\n          return {\n            tables : tables.map(function(table, t) {\n              return {\n                tblRow : table.tblRow,\n                tblCol : table.tblCol,\n                tableState : table.tableState\n              };\n            })\n          };\n        };\n\n        tables.forEach(function(table, t) {\n          table.model.currentTableState = table.tableState;\n          table.render();\n        }.bind(this));\n\n        table.model.currentTableState = null;\n\n      }\n    });\n\n    return table;\n  };\n\n  var createInnerTable = function() {\n\n    var colgroup = util.createElement('colgroup');\n    var tbody = util.createElement('tbody');\n    var table = util.createElement('table', {\n      style : { position : 'absolute',\n        tableLayout : 'fixed', borderCollapse : 'separate' },\n      props : { cellSpacing : '0' }\n    }, [ colgroup, tbody ]);\n    var tableBg = util.createSVGElement('svg', {\n      style : { position : 'absolute' }\n    });\n    var frame = util.createElement('div', {\n      style : { position : 'absolute', overflow : 'hidden' },\n      on : { scroll : function(event) {\n        event.target.scrollLeft = event.target.scrollTop = 0; }}\n    }, [ tableBg, table ]);\n\n    return {\n\n      $el : frame,\n      model : null,\n\n      tblRow : 0, tblCol : 0,\n      left : 0, top : 0, width : 100, height : 100,\n      rowFrom : 0, rowTo : 0,\n      colFrom : 0, colTo : 0,\n\n      colgroup : { $el : colgroup },\n      tbody : { $el : tbody },\n\n      tableState : {},\n\n      setTableVisible : function(visible) {\n        table.style.display = visible? '' : 'none';\n      },\n\n      setTableBgVisible : function(visible) {\n        tableBg.style.display = visible? '' : 'none';\n      },\n\n      prepare : function() {\n\n        var adjustMinRC = function() {\n\n          var scanMinRow = Math.max(0, minRow - tableModel.maxRowSpan);\n          var scanMinCol = Math.max(0, minCol - tableModel.maxColSpan);\n          var spanedCell = null;\n\n          for (var row = minRow; row >= scanMinRow; row -= 1) {\n            for (var col = minCol; col >= scanMinCol; col -= 1) {\n              var cell = tableModel.getCellAt(row, col, 'span');\n              if (cell.rowSpan != 1 || cell.colSpan != 1) {\n                spanedCell = { row : row, col : col };\n              }\n            }\n          }\n\n          if (!spanedCell) {\n            // not found.\n            return;\n          }\n\n          for (var row = minRow; row > spanedCell.row; row -= 1) {\n            minRow -= 1;\n            top -= tableModel.getCellHeightAt(minRow);\n          }\n          for (var col = minCol; col > spanedCell.col; col -= 1) {\n            minCol -= 1;\n            left -= tableModel.getCellWidthAt(minCol);\n          }\n        };\n\n        var tableModel = this.model;\n\n        var left = this.left, top = this.top,\n          width = this.width, height= this.height;\n        var col, row, cellWidth, cellHeight;\n        var tableLeft, tableTop, minCol, maxCol, minRow, maxRow;\n\n        for (col = this.colFrom; col < this.colTo; col += 1) {\n          cellWidth = tableModel.getCellWidthAt(col);\n          if (left + cellWidth > 0) {\n            break;\n          }\n          left += cellWidth;\n        }\n\n        for (row = this.rowFrom; row < this.rowTo; row += 1) {\n          cellHeight = tableModel.getCellHeightAt(row);\n          if (top + cellHeight > 0) {\n            break;\n          }\n          top += cellHeight;\n        }\n\n        minCol = col;\n        minRow = row;\n\n        adjustMinRC();\n\n        tableLeft = left;\n        tableTop = top;\n\n        for (col = minCol; col < this.colTo; col += 1) {\n          cellWidth = tableModel.getCellWidthAt(col);\n          if (left + cellWidth >= width) {\n            break;\n          }\n          left += cellWidth;\n        }\n\n        for (row = minRow; row < this.rowTo; row += 1) {\n          cellHeight = tableModel.getCellHeightAt(row);\n          if (top + cellHeight >= height) {\n            break;\n          }\n          top += cellHeight;\n        }\n\n        maxCol = Math.min(this.colTo - 1, col);\n        maxRow = Math.min(this.rowTo - 1, row);\n\n        // store state.\n        this.tableState = {\n          tableLeft : tableLeft,\n          tableTop : tableTop,\n          minCol : minCol,\n          maxCol : maxCol,\n          minRow : minRow,\n          maxRow : maxRow\n        };\n      },\n\n      render : function() {\n\n        var tableModel = this.model;\n\n        var minCol = this.tableState.minCol;\n        var maxCol = this.tableState.maxCol;\n        var minRow = this.tableState.minRow;\n        var maxRow = this.tableState.maxRow;\n\n        // render colgroup\n\n        var tableWidth = 0;\n        var colIndex = 0;\n        for (var col = minCol; col <= maxCol; col += 1) {\n          var cellWidth = tableModel.getCellWidthAt(col);\n          getOrCrt('col', colIndex, this.colgroup).\n            $el.style.width = cellWidth + 'px';\n          colIndex += 1;\n          tableWidth += cellWidth;\n        }\n        for (; colIndex < this.colgroup.$el.childNodes.length; colIndex += 1) {\n          this.colgroup.$el.childNodes[colIndex].style.width = '0px';\n        }\n\n        util.set(table, { style : {\n          width : tableWidth + 'px'\n        }});\n\n        // render tbody\n\n        var spanMap = createSpanMap();\n\n        var trIndex = 0;\n        for (var row = minRow; row <= maxRow; row += 1) {\n\n          var tr = getOrCrt('tr', trIndex, this.tbody, function(tr) {\n            tr.$el.style.lineWidth = '1';\n          });\n          tr.$el.style.height = tableModel.getCellHeightAt(row) + 'px';\n          tr.$el.style.display = '';\n          tr.row = row;\n\n          var tdIndex = 0;\n          for (var col = minCol; col <= maxCol; col += 1) {\n            if (spanMap.isSpaned(row, col) ) {\n              continue;\n            }\n            var td = getOrCrt('td', tdIndex, tr, function(td) {\n              td.renderer = null;\n              td.tableModel = tableModel;\n              td.colSpan = 1;\n              td.rowSpan = 1;\n              td.className = '';\n            });\n            var cell = tableModel.getCellAt(row, col);\n            spanMap.setSpaned(row, col, cell);\n            td.row = row;\n            td.col = col;\n\n            if (td.colSpan != cell.colSpan) {\n              td.colSpan = cell.colSpan\n              td.$el.colSpan = td.colSpan;\n            }\n            if (td.rowSpan != cell.rowSpan) {\n              td.rowSpan = cell.rowSpan\n              td.$el.rowSpan = td.rowSpan;\n            }\n            var className = cell.className || '';\n            if (td.className != className) {\n              td.className = className;\n              util.set(td.$el, { attrs : { 'class' : td.className} });\n            }\n\n            var factory = cell.factory || defaultCellRendererFactory;\n\n            if (td.factory != factory) {\n              td.factory = factory;\n              if (td.renderer) {\n                td.renderer.dispose();\n              }\n              td.$el.innerHTML = '';\n              td.renderer = td.factory(td);\n            }\n\n            td.renderer.render(cell);\n\n            tdIndex += 1;\n          }\n          trIndex += 1;\n        }\n\n        for (; trIndex < this.tbody.$el.childNodes.length; trIndex += 1) {\n          var restTds = this.tbody.children[trIndex].children;\n          for (var i = 0; i < restTds.length; i += 1) {\n            restTds[i].renderer.render({});\n          }\n          this.tbody.$el.childNodes[trIndex].style.display = 'none';\n        }\n\n        util.set(table, { style : {\n          left : this.tableState.tableLeft + 'px',\n          top : this.tableState.tableTop + 'px'\n        }});\n\n        var width = Math.max(0, this.width);\n        var height = Math.max(0, this.height);\n\n        util.set(tableBg, {\n          style : { left : '0px', top : '0px' },\n          attrs : { width : '' + width, height : '' + height }\n        });\n\n        util.set(this.$el, { style : {\n          width : width + 'px',\n          height : height + 'px'\n        }});\n      }\n    };\n  };\n\n  // what's going wrong with IE9?\n  if (!window.console) {\n    window.console = { log : function() {} };\n  }\n\n  // self check\n  !function() {\n\n    var assertEquals = function(expected, actual) {\n      if (expected !== actual) {\n        throw 'expected ' + JSON.stringify(expected) +\n            ' but ' + JSON.stringify(actual);\n      }\n    };\n\n    assertEquals('1,230.12',\n        util.formatNumber(util.toNarrowNumber('123０．１２３'), 2) );\n    assertEquals('123.123',\n        util.formatNumber(util.toNarrowNumber('123．１２３'), 3) );\n    assertEquals('1,230.12',\n        util.formatNumber(util.toNarrowNumber('+123０．１２３'), 2) );\n    assertEquals('-1,230.12',\n        util.formatNumber(util.toNarrowNumber('-123０．１２３'), 2) );\n  }();\n\n  var i18n = {\n    getInstance : function(lang) {\n      lang = lang || navigator.language || navigator.userLanguage;\n      return util.extend({}, i18n.en, i18n[lang] ||\n          i18n[lang.replace(/\\-\\w+$/, '')] || {});\n    },\n    en : { messages : { DAY_NAMES : 'Su,Mo,Tu,We,Th,Fr,Sa' } },\n    ja : { messages : { DAY_NAMES : '日,月,火,水,木,金,土' } }\n  };\n\n  prLib.util = util;\n  prLib.i18n = i18n;\n  prLib.createTable = createTable;\n  prLib.createTableModel = createTableModel;\n  prLib.defaultCellRendererFactory = defaultCellRendererFactory;\n\n}(window.prLib || (window.prLib = {}) );\n",
"//\n// ganttchart - node glue\n// @author Kazuhiko Arase\n// Licensed under MIT LICENSE\n//\n\n'use strict';\n\n!function(prlib) {\n  if (typeof exports === 'object') {\n    module.exports = prlib;\n  }\n}(window.prLib || (window.prLib = {}) );\n"
]
}