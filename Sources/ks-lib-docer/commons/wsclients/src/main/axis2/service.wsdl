<!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Metro/2.3 (tags/2.3-7528; 2013-04-29T19:34:10+0000) JAXWS-RI/2.2.8 JAXWS/2.2 svn-revision#unknown. --><!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Metro/2.3 (tags/2.3-7528; 2013-04-29T19:34:10+0000) JAXWS-RI/2.2.8 JAXWS/2.2 svn-revision#unknown. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://arubasignservice.arubapec.it/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://arubasignservice.arubapec.it/" name="ArubaSignServiceService">
    <wsp:Policy wsu:Id="ArubaSignServicePortBindingPolicy">
        <ns1:OptimizedMimeSerialization xmlns:ns1="http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization"/>
    </wsp:Policy>
    <types>
        <!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is Metro/2.3 (tags/2.3-7528; 2013-04-29T19:34:10+0000) JAXWS-RI/2.2.8 JAXWS/2.2 svn-revision#unknown. -->
        <xs:schema xmlns:tns="http://arubasignservice.arubapec.it/" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://arubasignservice.arubapec.it/">

            <xs:import namespace="http://www.w3.org/2005/05/xmlmime" schemaLocation="http://www.w3.org/2005/05/xmlmime"/>
            <xs:element name="ArssReturn" type="tns:arssReturn"/>

            <xs:element name="Auth" type="tns:auth"/>

            <xs:element name="EncryptedEnvelopReq" type="tns:encryptedEnvelopReq"/>

            <xs:element name="EncryptedEnvelopReturn" type="tns:encryptedEnvelopReturn"/>

            <xs:element name="EncryptionAlgorithm" type="tns:encryptionAlgorithm"/>

            <xs:element name="TypeOfTransportNotImplemented" type="tns:TypeOfTransportNotImplemented"/>

            <xs:element name="addpkcs7sign" type="tns:addpkcs7sign"/>

            <xs:element name="addpkcs7signResponse" type="tns:addpkcs7signResponse"/>

            <xs:element name="auth_methods" type="tns:auth_methods"/>

            <xs:element name="auth_methodsResponse" type="tns:auth_methodsResponse"/>

            <xs:element name="certificato" type="tns:certificato"/>

            <xs:element name="closesession" type="tns:closesession"/>

            <xs:element name="closesessionResponse" type="tns:closesessionResponse"/>

            <xs:element name="credentials_query" type="tns:credentials_query"/>

            <xs:element name="credentials_queryResponse" type="tns:credentials_queryResponse"/>

            <xs:element name="encryptedEnvelope" type="tns:encryptedEnvelope"/>

            <xs:element name="encryptedEnvelopeResponse" type="tns:encryptedEnvelopeResponse"/>

            <xs:element name="getVersion" type="tns:getVersion"/>

            <xs:element name="getVersionResponse" type="tns:getVersionResponse"/>

            <xs:element name="listCert" type="tns:listCert"/>

            <xs:element name="listCertAuth" type="tns:listCertAuth"/>

            <xs:element name="listCertAuthResponse" type="tns:listCertAuthResponse"/>

            <xs:element name="listCertResponse" type="tns:listCertResponse"/>

            <xs:element name="listprocess" type="tns:listprocess"/>

            <xs:element name="listprocessResponse" type="tns:listprocessResponse"/>

            <xs:element name="m7m" type="tns:m7m"/>

            <xs:element name="m7mResponse" type="tns:m7mResponse"/>

            <xs:element name="opensession" type="tns:opensession"/>

            <xs:element name="opensessionResponse" type="tns:opensessionResponse"/>

            <xs:element name="pdfsignature" type="tns:pdfsignature"/>

            <xs:element name="pdfsignatureResponse" type="tns:pdfsignatureResponse"/>

            <xs:element name="pdfsignatureV2" type="tns:pdfsignatureV2"/>

            <xs:element name="pdfsignatureV2Response" type="tns:pdfsignatureV2Response"/>

            <xs:element name="pdfsignatureV2_multiple" type="tns:pdfsignatureV2_multiple"/>

            <xs:element name="pdfsignatureV2_multipleResponse" type="tns:pdfsignatureV2_multipleResponse"/>

            <xs:element name="ping" type="tns:ping"/>

            <xs:element name="pingResponse" type="tns:pingResponse"/>

            <xs:element name="pkcs7sign" type="tns:pkcs7sign"/>

            <xs:element name="pkcs7signResponse" type="tns:pkcs7signResponse"/>

            <xs:element name="pkcs7signV2" type="tns:pkcs7signV2"/>

            <xs:element name="pkcs7signV2Response" type="tns:pkcs7signV2Response"/>

            <xs:element name="pkcs7signV2_multiple" type="tns:pkcs7signV2_multiple"/>

            <xs:element name="pkcs7signV2_multipleResponse" type="tns:pkcs7signV2_multipleResponse"/>

            <xs:element name="pkcs7signhash" type="tns:pkcs7signhash"/>

            <xs:element name="pkcs7signhashResponse" type="tns:pkcs7signhashResponse"/>

            <xs:element name="pkcs7signhash_multiple" type="tns:pkcs7signhash_multiple"/>

            <xs:element name="pkcs7signhash_multipleResponse" type="tns:pkcs7signhash_multipleResponse"/>

            <xs:element name="retriveCredential" type="tns:retriveCredential"/>

            <xs:element name="retriveCredentialResponse" type="tns:retriveCredentialResponse"/>

            <xs:element name="sendCredential" type="tns:sendCredential"/>

            <xs:element name="sendCredentialResponse" type="tns:sendCredentialResponse"/>

            <xs:element name="signhash" type="tns:signhash"/>

            <xs:element name="signhashResponse" type="tns:signhashResponse"/>

            <xs:element name="test_otp" type="tns:test_otp"/>

            <xs:element name="test_otpResponse" type="tns:test_otpResponse"/>

            <xs:element name="tsd" type="tns:tsd"/>

            <xs:element name="tsdResponse" type="tns:tsdResponse"/>

            <xs:element name="tsr" type="tns:tsr"/>

            <xs:element name="tsrResponse" type="tns:tsrResponse"/>

            <xs:element name="verify" type="tns:verify"/>

            <xs:element name="verifyOtp" type="tns:verifyOtp"/>

            <xs:element name="verifyOtpResponse" type="tns:verifyOtpResponse"/>

            <xs:element name="verifyResponse" type="tns:verifyResponse"/>

            <xs:element name="xmlsignature" type="tns:xmlsignature"/>

            <xs:element name="xmlsignatureResponse" type="tns:xmlsignatureResponse"/>

            <xs:element name="xmlsignature_multiple" type="tns:xmlsignature_multiple"/>

            <xs:element name="xmlsignature_multipleResponse" type="tns:xmlsignature_multipleResponse"/>

            <xs:complexType name="closesession">
                <xs:sequence>
                    <xs:element name="Identity" type="tns:auth" minOccurs="0"/>
                    <xs:element name="sessionid" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="auth">
                <xs:sequence>
                    <xs:element name="delegated_domain" type="xs:string" minOccurs="0"/>
                    <xs:element name="delegated_password" type="xs:string" minOccurs="0"/>
                    <xs:element name="delegated_user" type="xs:string" minOccurs="0"/>
                    <xs:element name="ext_auth_blobvalue" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="ext_auth_value" type="xs:string" minOccurs="0"/>
                    <xs:element name="ext_authtype" type="tns:credentialsType" minOccurs="0"/>
                    <xs:element name="otpPwd" type="xs:string" minOccurs="0"/>
                    <xs:element name="typeHSM" type="xs:string" minOccurs="0"/>
                    <xs:element name="typeOtpAuth" type="xs:string" minOccurs="0"/>
                    <xs:element name="user" type="xs:string" minOccurs="0"/>
                    <xs:element name="userPWD" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="closesessionResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7sign">
                <xs:sequence>
                    <xs:element name="SignRequest" type="tns:signRequest" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signRequest">
                <xs:sequence>
                    <xs:element name="bynaryinput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="certID" type="xs:string"/>
                    <xs:element name="dstNmae" type="xs:string" minOccurs="0"/>
                    <xs:element name="identity" type="tns:auth"/>
                    <xs:element name="notity_id" type="xs:string" minOccurs="0"/>
                    <xs:element name="notitymail" type="xs:string" minOccurs="0"/>
                    <xs:element name="srcName" type="xs:string" minOccurs="0"/>
                    <xs:element name="transport" type="tns:typeTransport"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7signResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signReturn">
                <xs:sequence>
                    <xs:element name="bynaryoutput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="dstPath" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="TypeOfTransportNotImplemented">
                <xs:sequence>
                    <xs:element name="message" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7signV2_multiple">
                <xs:sequence>
                    <xs:element name="identity" type="tns:auth" minOccurs="0"/>
                    <xs:element name="SignRequestV2" type="tns:signRequestV2" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="detached" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signRequestV2">
                <xs:sequence>
                    <xs:element name="binaryinput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="certID" type="xs:string"/>
                    <xs:element name="dstName" type="xs:string" minOccurs="0"/>
                    <xs:element name="identity" type="tns:auth"/>
                    <xs:element name="notify_id" type="xs:string" minOccurs="0"/>
                    <xs:element name="notifymail" type="xs:string" minOccurs="0"/>
                    <xs:element name="profile" type="xs:string" minOccurs="0"/>
                    <xs:element name="requiredmark" type="xs:boolean"/>
                    <xs:element name="session_id" type="xs:string" minOccurs="0"/>
                    <xs:element name="signingTime" type="xs:string" minOccurs="0"/>
                    <xs:element name="srcName" type="xs:string" minOccurs="0"/>
                    <xs:element name="stream" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="transport" type="tns:typeTransport"/>
                    <xs:element name="tsa_identity" type="tns:tsaAuth" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="tsaAuth">
                <xs:sequence>
                    <xs:element name="password" type="xs:string"/>
                    <xs:element name="user" type="xs:string"/>
                    <xs:element name="tsaurl" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7signV2_multipleResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturnV2Multiple" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signReturnV2Multiple">
                <xs:sequence>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_signs" type="tns:signReturnV2" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signReturnV2">
                <xs:sequence>
                    <xs:element name="binaryoutput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="dstPath" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                    <xs:element name="stream" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7signhash">
                <xs:sequence>
                    <xs:element name="SignRequestV2" type="tns:signRequestV2" minOccurs="0"/>
                    <xs:element name="countersignature" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7signhashResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturnV2" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="encryptedEnvelope">
                <xs:sequence>
                    <xs:element name="identity" type="tns:encryptedEnvelopReq" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="encryptedEnvelopReq">
                <xs:sequence>
                    <xs:element name="user" type="xs:string"/>
                    <xs:element name="password" type="xs:string"/>
                    <xs:element name="transport" type="tns:typeTransport"/>
                    <xs:element name="binaryinput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="srcName" type="xs:string" minOccurs="0"/>
                    <xs:element name="dstName" type="xs:string" minOccurs="0"/>
                    <xs:element name="notifymail" type="xs:string" minOccurs="0"/>
                    <xs:element name="notify_id" type="xs:string" minOccurs="0"/>
                    <xs:element name="stream" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="recipients" type="xs:base64Binary" maxOccurs="unbounded"/>
                    <xs:element name="algorithm" type="tns:encryptionAlgorithm"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="encryptedEnvelopeResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:encryptedEnvelopReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="encryptedEnvelopReturn">
                <xs:sequence>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                    <xs:element name="binaryoutput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="dstPath" type="xs:string" minOccurs="0"/>
                    <xs:element name="stream" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="xmlsignature_multiple">
                <xs:sequence>
                    <xs:element name="identity" type="tns:auth" minOccurs="0"/>
                    <xs:element name="SignRequestV2" type="tns:signRequestV2" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="parameter" type="tns:xmlSignatureParameter" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="xmlSignatureParameter">
                <xs:sequence>
                    <xs:element name="canonicalizedType" type="tns:canonicalizedType" minOccurs="0"/>
                    <xs:element name="transforms" type="tns:transform" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="type" type="tns:xmlSignatureType" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="transform">
                <xs:sequence>
                    <xs:element name="type" type="tns:transformType" minOccurs="0"/>
                    <xs:element name="value" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="xmlsignature_multipleResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturnV2Multiple" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="listprocess">
                <xs:sequence>
                    <xs:element name="Identity" type="tns:auth" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="listprocessResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="getVersion">
                <xs:sequence/>
            </xs:complexType>

            <xs:complexType name="getVersionResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pdfsignatureV2_multiple">
                <xs:sequence>
                    <xs:element name="identity" type="tns:auth" minOccurs="0"/>
                    <xs:element name="SignRequestV2" type="tns:signRequestV2" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="Apparence" type="tns:pdfSignApparence" minOccurs="0"/>
                    <xs:element name="pdfprofile" type="tns:pdfProfile" minOccurs="0"/>
                    <xs:element name="dict_signed_attributes" type="tns:dictionarySignedAttributes" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pdfSignApparence">
                <xs:sequence>
                    <xs:element name="image" type="xs:string" minOccurs="0"/>
                    <xs:element name="imageBin" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="imageOnly" type="xs:boolean"/>
                    <xs:element name="leftx" type="xs:int"/>
                    <xs:element name="lefty" type="xs:int"/>
                    <xs:element name="location" type="xs:string" minOccurs="0"/>
                    <xs:element name="page" type="xs:int"/>
                    <xs:element name="reason" type="xs:string" minOccurs="0"/>
                    <xs:element name="rightx" type="xs:int"/>
                    <xs:element name="righty" type="xs:int"/>
                    <xs:element name="testo" type="xs:string" minOccurs="0"/>
                    <xs:element name="bScaleFont" type="xs:boolean"/>
                    <xs:element name="bShowDateTime" type="xs:boolean"/>
                    <xs:element name="resizeMode" type="xs:int"/>
                    <xs:element name="preservePDFA" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="dictionarySignedAttributes">
                <xs:sequence>
                    <xs:element name="t" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pdfsignatureV2_multipleResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturnV2Multiple" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="listCertAuth">
                <xs:sequence>
                    <xs:element name="Identity" type="tns:applicationAuth" minOccurs="0"/>
                    <xs:element name="domain" type="xs:string" minOccurs="0"/>
                    <xs:element name="username" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="applicationAuth">
                <xs:sequence>
                    <xs:element name="applicationpassword" type="xs:string" minOccurs="0"/>
                    <xs:element name="applicationuser" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="listCertAuthResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:userCertListAuth" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="userCertListAuth">
                <xs:sequence>
                    <xs:element name="certs" type="tns:cert" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="cert">
                <xs:sequence>
                    <xs:element name="id" type="xs:string" minOccurs="0"/>
                    <xs:element name="value" type="xs:base64Binary" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="sendCredential">
                <xs:sequence>
                    <xs:element name="Identity" type="tns:auth" minOccurs="0"/>
                    <xs:element name="type" type="tns:credentialsType" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="sendCredentialResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:arssReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="arssReturn">
                <xs:sequence>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="retriveCredential">
                <xs:sequence>
                    <xs:element name="identity" type="tns:auth" minOccurs="0"/>
                    <xs:element name="type" type="tns:credentialsType" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="retriveCredentialResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:retriveCredentialReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="retriveCredentialReturn">
                <xs:sequence>
                    <xs:element name="blob" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                    <xs:element name="textvalue" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="opensession">
                <xs:sequence>
                    <xs:element name="Identity" type="tns:auth" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="opensessionResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="tsr">
                <xs:sequence>
                    <xs:element name="MarkRequest" type="tns:MarkRequest"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="MarkRequest">
                <xs:sequence>
                    <xs:element name="user" type="xs:string"/>
                    <xs:element name="password" type="xs:string"/>
                    <xs:element name="url" type="xs:string" minOccurs="0"/>
                    <xs:element name="transport" type="tns:typeTransport"/>
                    <xs:element name="binaryinput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="srcName" type="xs:string" minOccurs="0"/>
                    <xs:element name="dstName" type="xs:string" minOccurs="0"/>
                    <xs:element name="notifymail" type="xs:string" minOccurs="0"/>
                    <xs:element name="notify_id" type="xs:string" minOccurs="0"/>
                    <xs:element name="stream" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="tsrResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:markReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="markReturn">
                <xs:sequence>
                    <xs:element name="binaryoutput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="dstPath" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                    <xs:element name="stream" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="test_otp">
                <xs:sequence>
                    <xs:element name="test_credential" type="tns:testCredential" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="testCredential">
                <xs:sequence>
                    <xs:element name="appidentity" type="tns:applicationAuth" minOccurs="0"/>
                    <xs:element name="domain" type="xs:string" minOccurs="0"/>
                    <xs:element name="dummy_otp" type="xs:string" minOccurs="0"/>
                    <xs:element name="user" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="test_otpResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:gwReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="gwReturn">
                <xs:sequence>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="verifyOtp">
                <xs:sequence>
                    <xs:element name="Identity" type="tns:auth" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="verifyOtpResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:arssReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="verify">
                <xs:sequence>
                    <xs:element name="request" type="tns:verifyRequest" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="verifyRequest">
                <xs:sequence>
                    <xs:element name="binaryinput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="dstName" type="xs:string" minOccurs="0"/>
                    <xs:element name="notity_id" type="xs:string" minOccurs="0"/>
                    <xs:element name="notitymail" type="xs:string" minOccurs="0"/>
                    <xs:element name="srcName" type="xs:string" minOccurs="0"/>
                    <xs:element name="stream" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="transport" type="tns:typeTransport" minOccurs="0"/>
                    <xs:element name="type" type="tns:documentType" minOccurs="0"/>
                    <xs:element name="verdate" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="verifyResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:verifyReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="verifyReturn">
                <xs:sequence>
                    <xs:element name="binaryoutput" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="dstPath" type="xs:string" minOccurs="0"/>
                    <xs:element name="result" type="tns:verifySignatures" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                    <xs:element name="stream" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="verifySignatures">
                <xs:sequence>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="mark" type="tns:mark" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="signer" type="tns:signer" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="mark">
                <xs:sequence>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="signername" type="xs:string" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signer">
                <xs:sequence>
                    <xs:element name="countersigners" type="tns:signer" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="marks" type="tns:mark" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="result" type="xs:string" minOccurs="0"/>
                    <xs:element name="serialnumber" type="xs:string" minOccurs="0"/>
                    <xs:element name="signername" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pdfsignatureV2">
                <xs:sequence>
                    <xs:element name="SignRequestV2" type="tns:signRequestV2" minOccurs="0"/>
                    <xs:element name="Apparence" type="tns:pdfSignApparence" minOccurs="0"/>
                    <xs:element name="pdfprofile" type="tns:pdfProfile" minOccurs="0"/>
                    <xs:element name="password" type="xs:string" minOccurs="0"/>
                    <xs:element name="dict_signed_attributes" type="tns:dictionarySignedAttributes" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pdfsignatureV2Response">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturnV2" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signhash">
                <xs:sequence>
                    <xs:element name="SignHashRequest" type="tns:signHashRequest" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signHashRequest">
                <xs:sequence>
                    <xs:element name="certID" type="xs:string" minOccurs="0"/>
                    <xs:element name="hash" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="hashtype" type="xs:string" minOccurs="0"/>
                    <xs:element name="identity" type="tns:auth" minOccurs="0"/>
                    <xs:element name="requirecert" type="xs:boolean"/>
                    <xs:element name="session_id" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signhashResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signHashReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="signHashReturn">
                <xs:sequence>
                    <xs:element name="cert" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="certID" type="xs:string" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                    <xs:element name="signature" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="xmlsignature">
                <xs:sequence>
                    <xs:element name="SignRequestV2" type="tns:signRequestV2" minOccurs="0"/>
                    <xs:element name="parameter" type="tns:xmlSignatureParameter" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="xmlsignatureResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturnV2" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="credentials_query">
                <xs:sequence>
                    <xs:element name="credential_query" type="tns:credentialListQuery" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="credentialListQuery">
                <xs:sequence>
                    <xs:element name="appidentity" type="tns:applicationAuth" minOccurs="0"/>
                    <xs:element name="constraints" type="tns:queryConstraint" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="domain" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="queryConstraint">
                <xs:sequence>
                    <xs:element name="field" type="xs:string" minOccurs="0"/>
                    <xs:element name="value" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="credentials_queryResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:credentialListReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="credentialListReturn">
                <xs:complexContent>
                    <xs:extension base="tns:gwReturn">
                        <xs:sequence>
                            <xs:element name="credentials" type="tns:credentialInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>

            <xs:complexType name="credentialInfo">
                <xs:sequence>
                    <xs:element name="certs" type="tns:certificato" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                    <xs:element name="userid" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="certificato">
                <xs:sequence>
                    <xs:element name="content" type="xs:base64Binary" minOccurs="0"/>
                    <xs:element name="id" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7signhash_multiple">
                <xs:sequence>
                    <xs:element name="identity" type="tns:auth" minOccurs="0"/>
                    <xs:element name="SignRequestV2" type="tns:signRequestV2" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="countersignature" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7signhash_multipleResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturnV2Multiple" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="m7m">
                <xs:sequence>
                    <xs:element name="MarkRequest" type="tns:MarkRequest"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="m7mResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:markReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="tsd">
                <xs:sequence>
                    <xs:element name="MarkRequest" type="tns:MarkRequest"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="tsdResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:markReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="ping">
                <xs:sequence/>
            </xs:complexType>

            <xs:complexType name="pingResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pdfsignature">
                <xs:sequence>
                    <xs:element name="SignRequest" type="tns:signRequest" minOccurs="0"/>
                    <xs:element name="Apparence" type="tns:pdfSignApparence" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pdfsignatureResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="auth_methods">
                <xs:sequence>
                    <xs:element name="identity" type="tns:auth" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="auth_methodsResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:authMethodsReturn" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="authMethodsReturn">
                <xs:sequence>
                    <xs:element name="methods" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="return_code" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7signV2">
                <xs:sequence>
                    <xs:element name="SignRequestV2" type="tns:signRequestV2" minOccurs="0"/>
                    <xs:element name="detached" type="xs:boolean"/>
                    <xs:element name="returnder" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="pkcs7signV2Response">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturnV2" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="listCert">
                <xs:sequence>
                    <xs:element name="Identity" type="tns:auth" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="listCertResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:userCertList" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="userCertList">
                <xs:sequence>
                    <xs:element name="app1" type="tns:cert" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="app2" type="tns:cert" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="status" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="addpkcs7sign">
                <xs:sequence>
                    <xs:element name="SignRequestV2" type="tns:signRequestV2" minOccurs="0"/>
                    <xs:element name="detached" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="addpkcs7signResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:signReturnV2" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>

            <xs:simpleType name="credentialsType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="SMS"/>
                    <xs:enumeration value="ARUBACALL"/>
                    <xs:enumeration value="CNS2"/>
                    <xs:enumeration value="PAPERTOKEN"/>
                </xs:restriction>
            </xs:simpleType>

            <xs:simpleType name="typeTransport">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="BYNARYNET"/>
                    <xs:enumeration value="FILENAME"/>
                    <xs:enumeration value="DIRECTORYNAME"/>
                    <xs:enumeration value="STREAM"/>
                </xs:restriction>
            </xs:simpleType>

            <xs:simpleType name="encryptionAlgorithm">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="DES_EDE3_CBC"/>
                    <xs:enumeration value="RC2_CBC"/>
                    <xs:enumeration value="IDEA_CBC"/>
                    <xs:enumeration value="CAST5_CBC"/>
                    <xs:enumeration value="AES128_CBC"/>
                    <xs:enumeration value="AES192_CBC"/>
                    <xs:enumeration value="AES256_CBC"/>
                    <xs:enumeration value="CAMELLIA128_CBC"/>
                    <xs:enumeration value="CAMELLIA192_CBC"/>
                    <xs:enumeration value="CAMELLIA256_CBC"/>
                </xs:restriction>
            </xs:simpleType>

            <xs:simpleType name="canonicalizedType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ALGO_ID_C14N11_OMIT_COMMENTS"/>
                    <xs:enumeration value="ALGO_ID_C14N11_WITH_COMMENTS"/>
                </xs:restriction>
            </xs:simpleType>

            <xs:simpleType name="transformType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="CANONICAL_WITH_COMMENT"/>
                    <xs:enumeration value="CANONICAL_OMIT_COMMENT"/>
                    <xs:enumeration value="BASE64"/>
                    <xs:enumeration value="XPATH2_INTERSECT"/>
                    <xs:enumeration value="XPATH2_SUBTRACT"/>
                    <xs:enumeration value="XPATH2_UNION"/>
                    <xs:enumeration value="XSLT"/>
                </xs:restriction>
            </xs:simpleType>

            <xs:simpleType name="xmlSignatureType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="XMLENVELOPED"/>
                    <xs:enumeration value="XMLENVELOPING"/>
                    <xs:enumeration value="XMLDETACHED_INTERNAL"/>
                </xs:restriction>
            </xs:simpleType>

            <xs:simpleType name="pdfProfile">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="BASIC"/>
                    <xs:enumeration value="PADESBES"/>
                    <xs:enumeration value="PADESLTV"/>
                </xs:restriction>
            </xs:simpleType>

            <xs:simpleType name="documentType">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="PKCS7"/>
                    <xs:enumeration value="PDF"/>
                    <xs:enumeration value="XML"/>
                    <xs:enumeration value="TSD"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:schema>
    </types>
    <message name="verify">
        <part name="parameters" element="tns:verify"/>
    </message>
    <message name="verifyResponse">
        <part name="parameters" element="tns:verifyResponse"/>
    </message>
    <message name="getVersion">
        <part name="parameters" element="tns:getVersion"/>
    </message>
    <message name="getVersionResponse">
        <part name="parameters" element="tns:getVersionResponse"/>
    </message>
    <message name="pdfsignatureV2_multiple">
        <part name="parameters" element="tns:pdfsignatureV2_multiple"/>
    </message>
    <message name="pdfsignatureV2_multipleResponse">
        <part name="parameters" element="tns:pdfsignatureV2_multipleResponse"/>
    </message>
    <message name="TypeOfTransportNotImplemented">
        <part name="fault" element="tns:TypeOfTransportNotImplemented"/>
    </message>
    <message name="xmlsignature_multiple">
        <part name="parameters" element="tns:xmlsignature_multiple"/>
    </message>
    <message name="xmlsignature_multipleResponse">
        <part name="parameters" element="tns:xmlsignature_multipleResponse"/>
    </message>
    <message name="pkcs7signV2_multiple">
        <part name="parameters" element="tns:pkcs7signV2_multiple"/>
    </message>
    <message name="pkcs7signV2_multipleResponse">
        <part name="parameters" element="tns:pkcs7signV2_multipleResponse"/>
    </message>
    <message name="encryptedEnvelope">
        <part name="parameters" element="tns:encryptedEnvelope"/>
    </message>
    <message name="encryptedEnvelopeResponse">
        <part name="parameters" element="tns:encryptedEnvelopeResponse"/>
    </message>
    <message name="pkcs7signhash_multiple">
        <part name="parameters" element="tns:pkcs7signhash_multiple"/>
    </message>
    <message name="pkcs7signhash_multipleResponse">
        <part name="parameters" element="tns:pkcs7signhash_multipleResponse"/>
    </message>
    <message name="retriveCredential">
        <part name="parameters" element="tns:retriveCredential"/>
    </message>
    <message name="retriveCredentialResponse">
        <part name="parameters" element="tns:retriveCredentialResponse"/>
    </message>
    <message name="credentials_query">
        <part name="parameters" element="tns:credentials_query"/>
    </message>
    <message name="credentials_queryResponse">
        <part name="parameters" element="tns:credentials_queryResponse"/>
    </message>
    <message name="ping">
        <part name="parameters" element="tns:ping"/>
    </message>
    <message name="pingResponse">
        <part name="parameters" element="tns:pingResponse"/>
    </message>
    <message name="pkcs7signV2">
        <part name="parameters" element="tns:pkcs7signV2"/>
    </message>
    <message name="pkcs7signV2Response">
        <part name="parameters" element="tns:pkcs7signV2Response"/>
    </message>
    <message name="listCertAuth">
        <part name="parameters" element="tns:listCertAuth"/>
    </message>
    <message name="listCertAuthResponse">
        <part name="parameters" element="tns:listCertAuthResponse"/>
    </message>
    <message name="auth_methods">
        <part name="parameters" element="tns:auth_methods"/>
    </message>
    <message name="auth_methodsResponse">
        <part name="parameters" element="tns:auth_methodsResponse"/>
    </message>
    <message name="test_otp">
        <part name="parameters" element="tns:test_otp"/>
    </message>
    <message name="test_otpResponse">
        <part name="parameters" element="tns:test_otpResponse"/>
    </message>
    <message name="listCert">
        <part name="parameters" element="tns:listCert"/>
    </message>
    <message name="listCertResponse">
        <part name="parameters" element="tns:listCertResponse"/>
    </message>
    <message name="pkcs7signhash">
        <part name="parameters" element="tns:pkcs7signhash"/>
    </message>
    <message name="pkcs7signhashResponse">
        <part name="parameters" element="tns:pkcs7signhashResponse"/>
    </message>
    <message name="pdfsignature">
        <part name="parameters" element="tns:pdfsignature"/>
    </message>
    <message name="pdfsignatureResponse">
        <part name="parameters" element="tns:pdfsignatureResponse"/>
    </message>
    <message name="opensession">
        <part name="parameters" element="tns:opensession"/>
    </message>
    <message name="opensessionResponse">
        <part name="parameters" element="tns:opensessionResponse"/>
    </message>
    <message name="listprocess">
        <part name="parameters" element="tns:listprocess"/>
    </message>
    <message name="listprocessResponse">
        <part name="parameters" element="tns:listprocessResponse"/>
    </message>
    <message name="verifyOtp">
        <part name="parameters" element="tns:verifyOtp"/>
    </message>
    <message name="verifyOtpResponse">
        <part name="parameters" element="tns:verifyOtpResponse"/>
    </message>
    <message name="sendCredential">
        <part name="parameters" element="tns:sendCredential"/>
    </message>
    <message name="sendCredentialResponse">
        <part name="parameters" element="tns:sendCredentialResponse"/>
    </message>
    <message name="closesession">
        <part name="parameters" element="tns:closesession"/>
    </message>
    <message name="closesessionResponse">
        <part name="parameters" element="tns:closesessionResponse"/>
    </message>
    <message name="pdfsignatureV2">
        <part name="parameters" element="tns:pdfsignatureV2"/>
    </message>
    <message name="pdfsignatureV2Response">
        <part name="parameters" element="tns:pdfsignatureV2Response"/>
    </message>
    <message name="m7m">
        <part name="parameters" element="tns:m7m"/>
    </message>
    <message name="m7mResponse">
        <part name="parameters" element="tns:m7mResponse"/>
    </message>
    <message name="pkcs7sign">
        <part name="parameters" element="tns:pkcs7sign"/>
    </message>
    <message name="pkcs7signResponse">
        <part name="parameters" element="tns:pkcs7signResponse"/>
    </message>
    <message name="xmlsignature">
        <part name="parameters" element="tns:xmlsignature"/>
    </message>
    <message name="xmlsignatureResponse">
        <part name="parameters" element="tns:xmlsignatureResponse"/>
    </message>
    <message name="addpkcs7sign">
        <part name="parameters" element="tns:addpkcs7sign"/>
    </message>
    <message name="addpkcs7signResponse">
        <part name="parameters" element="tns:addpkcs7signResponse"/>
    </message>
    <message name="signhash">
        <part name="parameters" element="tns:signhash"/>
    </message>
    <message name="signhashResponse">
        <part name="parameters" element="tns:signhashResponse"/>
    </message>
    <message name="tsd">
        <part name="parameters" element="tns:tsd"/>
    </message>
    <message name="tsdResponse">
        <part name="parameters" element="tns:tsdResponse"/>
    </message>
    <message name="tsr">
        <part name="parameters" element="tns:tsr"/>
    </message>
    <message name="tsrResponse">
        <part name="parameters" element="tns:tsrResponse"/>
    </message>
    <portType name="ArubaSignService">
        <operation name="verify">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/verifyRequest" message="tns:verify"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/verifyResponse" message="tns:verifyResponse"/>
        </operation>
        <operation name="getVersion">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/getVersionRequest" message="tns:getVersion"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/getVersionResponse" message="tns:getVersionResponse"/>
        </operation>
        <operation name="pdfsignatureV2_multiple">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2_multipleRequest" message="tns:pdfsignatureV2_multiple"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2_multipleResponse" message="tns:pdfsignatureV2_multipleResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2_multiple/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="xmlsignature_multiple">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/xmlsignature_multipleRequest" message="tns:xmlsignature_multiple"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/xmlsignature_multipleResponse" message="tns:xmlsignature_multipleResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/xmlsignature_multiple/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="pkcs7signV2_multiple">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2_multipleRequest" message="tns:pkcs7signV2_multiple"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2_multipleResponse" message="tns:pkcs7signV2_multipleResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2_multiple/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="encryptedEnvelope">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/encryptedEnvelopeRequest" message="tns:encryptedEnvelope"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/encryptedEnvelopeResponse" message="tns:encryptedEnvelopeResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/encryptedEnvelope/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="pkcs7signhash_multiple">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhash_multipleRequest" message="tns:pkcs7signhash_multiple"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhash_multipleResponse" message="tns:pkcs7signhash_multipleResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhash_multiple/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="retriveCredential">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/retriveCredentialRequest" message="tns:retriveCredential"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/retriveCredentialResponse" message="tns:retriveCredentialResponse"/>
        </operation>
        <operation name="credentials_query">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/credentials_queryRequest" message="tns:credentials_query"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/credentials_queryResponse" message="tns:credentials_queryResponse"/>
        </operation>
        <operation name="ping">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pingRequest" message="tns:ping"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pingResponse" message="tns:pingResponse"/>
        </operation>
        <operation name="pkcs7signV2">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2Request" message="tns:pkcs7signV2"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2Response" message="tns:pkcs7signV2Response"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="listCertAuth">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/listCertAuthRequest" message="tns:listCertAuth"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/listCertAuthResponse" message="tns:listCertAuthResponse"/>
        </operation>
        <operation name="auth_methods">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/auth_methodsRequest" message="tns:auth_methods"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/auth_methodsResponse" message="tns:auth_methodsResponse"/>
        </operation>
        <operation name="test_otp">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/test_otpRequest" message="tns:test_otp"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/test_otpResponse" message="tns:test_otpResponse"/>
        </operation>
        <operation name="listCert">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/listCertRequest" message="tns:listCert"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/listCertResponse" message="tns:listCertResponse"/>
        </operation>
        <operation name="pkcs7signhash">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhashRequest" message="tns:pkcs7signhash"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhashResponse" message="tns:pkcs7signhashResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhash/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="pdfsignature">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureRequest" message="tns:pdfsignature"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureResponse" message="tns:pdfsignatureResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pdfsignature/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="opensession">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/opensessionRequest" message="tns:opensession"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/opensessionResponse" message="tns:opensessionResponse"/>
        </operation>
        <operation name="listprocess">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/listprocessRequest" message="tns:listprocess"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/listprocessResponse" message="tns:listprocessResponse"/>
        </operation>
        <operation name="verifyOtp">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/verifyOtpRequest" message="tns:verifyOtp"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/verifyOtpResponse" message="tns:verifyOtpResponse"/>
        </operation>
        <operation name="sendCredential">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/sendCredentialRequest" message="tns:sendCredential"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/sendCredentialResponse" message="tns:sendCredentialResponse"/>
        </operation>
        <operation name="closesession">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/closesessionRequest" message="tns:closesession"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/closesessionResponse" message="tns:closesessionResponse"/>
        </operation>
        <operation name="pdfsignatureV2">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2Request" message="tns:pdfsignatureV2"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2Response" message="tns:pdfsignatureV2Response"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="m7m">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/m7mRequest" message="tns:m7m"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/m7mResponse" message="tns:m7mResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/m7m/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="pkcs7sign">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signRequest" message="tns:pkcs7sign"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signResponse" message="tns:pkcs7signResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/pkcs7sign/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="xmlsignature">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/xmlsignatureRequest" message="tns:xmlsignature"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/xmlsignatureResponse" message="tns:xmlsignatureResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/xmlsignature/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="addpkcs7sign">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/addpkcs7signRequest" message="tns:addpkcs7sign"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/addpkcs7signResponse" message="tns:addpkcs7signResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/addpkcs7sign/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="signhash">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/signhashRequest" message="tns:signhash"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/signhashResponse" message="tns:signhashResponse"/>
        </operation>
        <operation name="tsd">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/tsdRequest" message="tns:tsd"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/tsdResponse" message="tns:tsdResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/tsd/Fault/TypeOfTransportNotImplemented"/>
        </operation>
        <operation name="tsr">
            <input wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/tsrRequest" message="tns:tsr"/>
            <output wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/tsrResponse" message="tns:tsrResponse"/>
            <fault message="tns:TypeOfTransportNotImplemented" name="TypeOfTransportNotImplemented" wsam:Action="http://arubasignservice.arubapec.it/ArubaSignService/tsr/Fault/TypeOfTransportNotImplemented"/>
        </operation>
    </portType>
    <binding name="ArubaSignServicePortBinding" type="tns:ArubaSignService">
        <wsp:PolicyReference URI="#ArubaSignServicePortBindingPolicy"/>
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <operation name="verify">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getVersion">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="pdfsignatureV2_multiple">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="xmlsignature_multiple">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="pkcs7signV2_multiple">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="encryptedEnvelope">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="pkcs7signhash_multiple">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="retriveCredential">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="credentials_query">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="ping">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="pkcs7signV2">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="listCertAuth">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="auth_methods">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="test_otp">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="listCert">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="pkcs7signhash">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="pdfsignature">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="opensession">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="listprocess">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="verifyOtp">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="sendCredential">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="closesession">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="pdfsignatureV2">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="m7m">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="pkcs7sign">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="xmlsignature">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="addpkcs7sign">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="signhash">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="tsd">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
        <operation name="tsr">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="TypeOfTransportNotImplemented">
                <soap:fault name="TypeOfTransportNotImplemented" use="literal"/>
            </fault>
        </operation>
    </binding>
    <service name="ArubaSignServiceService">
        <port name="ArubaSignServicePort" binding="tns:ArubaSignServicePortBinding">
            <soap:address location="http://172.16.1.9:8080/ArubaSignService/ArubaSignService"/>
        </port>
    </service>
</definitions>